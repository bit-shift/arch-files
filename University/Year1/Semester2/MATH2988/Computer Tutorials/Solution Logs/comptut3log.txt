User: (PSEUDOSTUDENT, MATHS)
Automatic Magma log submission from teaching laboratory
Date: 12-08-13  09:47 AM
Loading "/users/ugrad/m2068/magma/MATH2068/MagmaProcedures.txt"
(Magma functions defined for use in MATH2068/2988)
Log file: Mon12Aug.log
seed:  629107833 0
> load "tut3data.txt";
Loading "/users/ugrad/m2068/magma/MATH2068/tut3data.txt"
> V:=VigenereCryptosystem(7);
> k:=V!"CARSLAW";
> M:="Computer Tutorial Three";
> P:=Encoding(V,M);
> C:=Enciphering(k,P);
> M;
Computer Tutorial Three
> P;
COMPUTERTUTORIALTHREE
> C;
EODHFTATTLLZRECLKZCEA
> /*
> We are using a Vigenere cipher with a 7 letter key (CARSLAW).
> This cipher is made up from 7 translation ciphers. The first of
> these has key C, meaning that the letter A gets changed into C,
> and consequently B becomes D, and C becomes E, and so on. Numerically,
> the i-th letter of the alphabet gets changed into the (i+2)-nd letter
> of the alphabet. The first letter of our message COMPUTERTUTORIALTHREE
> is a C, which gets changed into an E.
>
> The next translation cipher has the second letter of CARSLAW as its key.
> But this means that A in enciphered as A: this cipher represents all
> letters by themselves. So the second letter of our plaintext is unchanged
> in the ciphertext. The next letter of the key is R. Let's find out
> the position of R in the alphabet:
> */
> Index(alphabet,"R");
18
> /*
> So our third translation replaces the 1st letter of the alphabet by
> the 18th, and hence replaces the 2nd by the 19th, the 3rd by the 20th, etc.
> The rule is to replace letter number i by letter number i + 17, except
> that if i + 17 > 26 then we have to use (i + 17) - 26 instead.
>
> Where is M in the alphabet?
> */
> Index(alphabet,"M");
13
> /*
> We have to increase this by 17, giving 30, and then reduce modulo 26,
> which gives 4. The 4th letter of the alphabet is D, and so D is the next
> letter of our ciphertext. COM has become EOD.
>
> The next letter of the key is S. Since S the 19th letter of the alphabet,
> the alphabetic shift that takes A to S is a shift through 18 places. So
> to encipher the next letter we add on 18 and reduce modulo 26. And so on.
> */
> (Index(alphabet,"P")+Index(alphabet,"S")-1) mod 26;
8
> alphabet[8];
H
> */ 
> We have now checked the first 4 letters of the ciphertext, EODH.
>
> It is somewhat tedious, but here are a sequence of Magma commands
> to compute all 21 letters of the ciphertext
> */
> Index(alphabet,"C")+Index(alphabet,"C")-1;
5
> alphabet[5];
E
> Index(alphabet,"O")+Index(alphabet,"A")-1;
15
> alphabet[15];
O
> Index(alphabet,"M")+Index(alphabet,"R")-1;
30
> alphabet[4];
D
> Index(alphabet,"P")+Index(alphabet,"S")-1;
34
> alphabet[8];
H
> Index(alphabet,"U")+Index(alphabet,"L")-1;
32
> alphabet[6];
F
> Index(alphabet,"T")+Index(alphabet,"A")-1;
20
> alphabet[20];
T
> Index(alphabet,"E")+Index(alphabet,"W")-1;
27
> alphabet[1];
A
> Index(alphabet,"R")+Index(alphabet,"C")-1;
20
> alphabet[20];
T
> Index(alphabet,"T")+Index(alphabet,"A")-1;
20
> alphabet[20];
T
> Index(alphabet,"U")+Index(alphabet,"R")-1;
38
> alphabet[12];
L
> Index(alphabet,"T")+Index(alphabet,"S")-1;
38
> alphabet[12];
L
> Index(alphabet,"O")+Index(alphabet,"L")-1;
26
> alphabet[26];
Z
> Index(alphabet,"R")+Index(alphabet,"A")-1;
18
> alphabet[18];
R
> Index(alphabet,"I")+Index(alphabet,"W")-1;
31
> alphabet[5];
E
> Index(alphabet,"A")+Index(alphabet,"C")-1;
3
> alphabet[3];
C
> Index(alphabet,"L")+Index(alphabet,"A")-1;
12
> alphabet[12];
L
> Index(alphabet,"T")+Index(alphabet,"R")-1;
37
> alphabet[11];
K
> Index(alphabet,"H")+Index(alphabet,"S")-1;
26
> alphabet[26];
Z
> Index(alphabet,"R")+Index(alphabet,"L")-1;
29
> alphabet[3];
C
> Index(alphabet,"E")+Index(alphabet,"A")-1;
5
> alphabet[5];
E
> Index(alphabet,"E")+Index(alphabet,"W")-1;
27
> /*
> Numerically, COMPUTERTUTORIALTHREE is 3,15,13,16,21,20,5,18,20,21,20,...
> To do the enciphering by hand, write these numbers in a row and beneath
> them write the numerical version of the key, repeated as often as needed.
> CARSLAWCARSLAWCARSLAW is 3,1,18,19,12,1,23,3,1,18,19,21,1,23,...
> Actually we have to decrease all of these by 1, because we need the
> alphabetic shifts required to map A to the various letters of CARSLAW.
> Now let us do the enciphering:
>  3,15,13,16,21,20, 5,18,20,21,20,15,18, 9, 1,12,20, 8,18, 5, 5
>  2, 0,17,18,11, 0,22, 2, 0,17,18,11, 0,22, 2, 0,17,18,11, 0,22
> Adding term by term, and subtracting 26 if the answer is greater
> than 26, gives
>  5,15, 4, 8, 6,20, 1,20,20,12,12,26,18, 5, 3,12,11,26, 3, 5, 1.
> This is the numerical version of the ciphertext EODHFTATTLLZRECLKZCEA.
> */
>
> for i in [5,15,4,8,6,20,1,20,20,12,12,26,18,5,3,12,11,26,3,5,1] do
for> alphabet[i];
for> end for;
E
O
D
H
F
T
A
T
T
L
L
Z
R
E
C
L
K
Z
C
E
A
> /*
> It's right!
> */
> m:=InverseKey(k);
> m;
YAJIPAE
> k;
CARSLAW
> /*
> If you follow an alphabetically shift through 2 places by an alphabetic
> shift through 24 places then the net effect is an alphabetic shift
> through 26 places, which is the same as no shift at all, since 26
> is congruent to 0 modulo 26. So a translation cipher with key C
> (alphabetic shift by 2 places) can be "undone" by a translation cipher
> with key Y (alphabetic shift by 24 places). For translation ciphers,
> if C is the key then Y is the inverse key. Similarly,
> if A is the key then A is the inverse key,
> if R is the key then J is the inverse key,
> if S is the key then I is the inverse key,
> if L is the key then P is the inverse key,
> if A is the key then A is the inverse key,
> if W is the key then E is the inverse key.
> Here is a sequence of Magma commands that confirms this:
> */
> Index(alphabet,"C")-1+Index(alphabet,"Y")-1;
26
> Index(alphabet,"A")-1+Index(alphabet,"A")-1;
0
> Index(alphabet,"R")-1+Index(alphabet,"J")-1;
26
> Index(alphabet,"S")-1+Index(alphabet,"I")-1;
26
> Index(alphabet,"L")-1+Index(alphabet,"P")-1;
26
> Index(alphabet,"A")-1+Index(alphabet,"A")-1;
0
> Index(alphabet,"W")-1+Index(alphabet,"E")-1;
26
> /*
> So for a Vigenere cipher, if CARSLAW is the key then YAJIPAE is the
> inverse key. Enciphering a message using the key CARSLAW, and then
> enciphering the result with the key YAJIPAE, will get you back
> to where you started.
> */
> Enciphering(m,C);
COMPUTERTUTORIALTHREE
> /*
> As promised!
> */
> dancemen;
Holmes had been seated for some hours in silence with his long, thin back curved over a
chemical vessel in which he was brewing a particularly malodorous product. His head was sunk
upon his
breast, and he looked from my point of view like a strange, lank bird, with dull gray 
plumage and a
black top-knot. "So, Watson," said he, suddenly, "you do not propose to invest in South 
African
securities?"
I gave a start of astonishment. Accustomed as I was to Holmes's curious faculties, this 
sudden intrusion
into my most intimate thoughts was utterly inexplicable. "How on earth do you know that?" I 
asked. He
wheeled round upon his stool, with a steaming test-tube in his hand, and a gleam of 
amusement in his
deep-set eyes. "Now, Watson, confess yourself utterly taken aback," said he.
"I am."
"I ought to make you sign a paper to that effect."
"Why?"
"Because in five minutes you will say that it is all so absurdly simple."
"I am sure that I shall say nothing of the kind."
"You see, my dear Watson" -- he propped his test-tube in the rack, and began to lecture with
the air of a
professor addressing his class -- "it is not really difficult to construct a series of 
inferences, each
dependent upon its predecessor and each simple in itself. If, after doing so, one simply 
knocks out all
the central inferences and presents one's audience with the starting-point and the 
conclusion, one may
produce a startling, though possibly a meretricious, effect. Now, it was not really 
difficult, by an
inspection of the groove between your left forefinger and thumb, to feel sure that you did 
NOT propose
to invest your small capital in the gold fields."
"I see no connection."
"Very likely not; but I can quickly show you a close connection. Here are the missing links 
of the very
simple chain: 1. You had chalk between your left finger and thumb when you returned from the
club last
night. 2. You put chalk there when you play billiards, to steady the cue. 3. You never play 
billiards
except with Thurston. 4. You told me, four weeks ago, that Thurston had an option on some 
South African
property which would expire in a month, and which he desired you to share with him. 5. Your 
cheque book
is locked in my drawer, and you have not asked for the key. 6. You do not propose to invest 
your money
in this manner."
"How absurdly simple!" I cried.
> CoincidenceIndex(dancemen);
0.0617615029004579993435240488001
> S:=SubstitutionCryptosystem();
> dm:=Encoding(S,dancemen);
> rk:=RandomKey(S);
> rk;
HAKNEMGJVQFWCSZITLXDBPYUOR
> cdm:=Enciphering(rk,dm);
> CoincidenceIndex(cdm);
0.0617615029004579993435240488001
> rk:=RandomKey(S);
> rk;
KDFJPWBYTAVGOLXZHUNQCEMRIS
> cdm:=Enciphering(rk,dm);
> CoincidenceIndex(cdm);
0.0617615029004579993435240488001
> rk:=RandomKey(S);
> rk;
TFXEZUBNOSLIAJKGWCRQHDYVPM
> cdm:=Enciphering(rk,dm);
> CoincidenceIndex(cdm);
0.0617615029004579993435240488001
> /*
> It is clear that substitution ciphers do not change the CI. If the i-th and
> j-th letters of the plaintext are equal, then the i-th and j-th letters of the
> ciphertext are equal, for a substitution cipher. So the probability that two
> randomly chosen letters are equal is the same after enciphering as it was before.
>
> Note also that transposition ciphers do not change the CI. Recall that a transpostion
> cipher simply reorders the letters in the text. The probability that two randomly
> selected letters are the same is unchanged by shuffling the letters around before
> selecting them.
> */
> dmv:=Encoding(V,dancemen);
> cdmv:=Enciphering(k,dmv);
> CoincidenceIndex(cdmv);
0.0424911728525720666415119806861
> /*
> Clearly the Vigenere cipher has changed the CI. Because some E's in the
> plaintext are enciphered as G's, some as E's, some as V's, etc., it is no
> longer true that there is a letter whose frequency in the ciphertext is
> as large as the frequncy of E in the plaintext. A Vigenere cipher evens out
> the frequency distribution of the letters, to some extent, and this reduces
> the CI.
> */
> k:=RandomKey(V);
> k;
SBDPYAM
> cdmv:=Enciphering(k,dmv);
> CoincidenceIndex(cdmv);
0.0403217345689805910124147578248
> k:=RandomKey(V);
> k;
NNQNEKM
> cdmv:=Enciphering(k,dmv);
> CoincidenceIndex(cdmv);
0.0428095943653503403551718954669
> k:=RandomKey(V);
> k;
GMXEQNB
> cdmv:=Enciphering(k,dmv);
> CoincidenceIndex(cdmv);
0.0418524892402364540482172383223
> /*
> Clearly different Vigenere keys affect the CI differently.
> */
> VV:=VigenereCryptosystem(20);
> dmvv:=Encoding(VV,dancemen);
> kk:=RandomKey(VV);
> kk;
NBOEXTKHOELCUCQOHXMG
> cdmvv:=Enciphering(kk,dmvv);
> CoincidenceIndex(cdmvv);
0.0390842467245224444219483838114
> /*
> It's lower. A greater Vigenere period produces a more even
> distribution of the letters, giving a lower CI.
> */
> kk:=RandomKey(VV);
> kk;
RIYQTJDVWZHOYAOMJCYY
> cdmvv:=Enciphering(kk,dmvv);
> CoincidenceIndex(cdmvv);
0.0395400987168042505284017878233
> /*
> Different from the CI we got for our previous value of kkk
> but still lower than the values we got when using a smaller period.
> */
> VVV:=VigenereCryptosystem(80);
> dmvvv:=Encoding(VVV,dancemen);
> kkk:=RandomKey(VVV);
> kkk;
ZZEUCRISQAEZPAEFNRRWLCZEHRFTFNYOSKFXCZLSXHUMXAWTKGIWUIYCHAGDVQFLEKWDUWBXZPHBTRJD
> pqr:=Enciphering(kkk,dmvvv);
> CoincidenceIndex(pqr);
0.0387504869885852943251641956789
> kkk:=RandomKey(VVV);
> kkk;
GSWNVZGMBVNGFSKGBMHWMLVPJAOGWSMAPKQXOGHFZABZKACSLCPGMFOCUGFFQCGQPKXIGDKCQMPOAANB
> pqr:=Enciphering(kkk,dmvvv);
> CoincidenceIndex(pqr);
0.0389554056499878828037044876573
> /*
> A greater period again producing lower values for the CI.
> but still lower than the values we got when using a smaller period.
> We are now very close to 1/26 = 0.0384615384615384615384615384615
> which is as small as it could possibly get.
> */
> 1.0/26;
0.0384615384615384615384615384615
>
> alph:="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
> Decimation(alph,1,3);
ADGJMPSV
> Decimation(alph,2,3);
BEHKNQTW
> Decimation(alph,2,6);
BHNT
> /*
> For example, Decimation(alph,2,3) should print every 3rd letter
> of alph, starting at the 2nd.
> */
> Type(dm);
CryptTxt
> Type(alph);
MonStgElt
> scdmv:=String(cdmv);
> Type(vt1);
MonStgElt
> Type(vt2);
MonStgElt
> Type(vt3);
MonStgElt
> Type(vt4);
MonStgElt
> CoincidenceIndex(Decimation(scdmv,1,7));
0.0583054323892257110970349591289
> CoincidenceIndex(Decimation(scdmv,2,7));
0.0567369468826350556510723011492
> CoincidenceIndex(Decimation(scdmv,3,7));
0.0767049739088468615208276777365
> CoincidenceIndex(Decimation(scdmv,1,11));
0.0430196019751608559030375579829
> CoincidenceIndex(Decimation(scdmv,2,11));
0.0414484512943288942091874906479
> CoincidenceIndex(Decimation(scdmv,3,11));
0.0432440520724225647164447104594
> CoincidenceIndex(Decimation(scdmv,3,5));
0.0424438288704216682056017236073
> CoincidenceIndex(Decimation(scdmv,6,5));
0.0423976608187134502923976608187
> CoincidenceIndex(Decimation(scdmv,6,7));
0.0603565288209211836032938195639
> CoincidenceIndex(Decimation(scdmv,2,14));
0.0572916666666666666666666666667
> CoincidenceIndex(Decimation(scdmv,6,21));
0.0615595075239398084815321477428
> /*
> When the decimation period equals the Vigenere period, or a
> multiple of the Vigenere period, the CI is large -- similar to
> the CI in typical English. For other decimation periods the
> CI is not much more than 1/26.
> */
> for i:=2 to 20 do
for> print "Period:",i,"CI:",CoincidenceIndex(Decimation(vt1,1,i));
for> end for;
Period: 2 CI: 0.0409995044897075380750330432572
Period: 3 CI: 0.0402920072377862357272103325638
Period: 4 CI: 0.0411008978796897453466981795256
Period: 5 CI: 0.0406125212680995867912080280565
Period: 6 CI: 0.0406835042093856797532716512461
Period: 7 CI: 0.0408375583783096185647567646150
Period: 8 CI: 0.0416938690723485073298118582705
Period: 9 CI: 0.0395018967507834405409863104074
Period: 10 CI: 0.0416666666666666666666666666667
Period: 11 CI: 0.0413879645502111973827210289850
Period: 12 CI: 0.0423344178013415270916174639515
Period: 13 CI: 0.0579159037916842714739527095754
Period: 14 CI: 0.0415134859680413496887853528919
Period: 15 CI: 0.0414657062323833385530848731600
Period: 16 CI: 0.0435986159169550173010380622838
Period: 17 CI: 0.0398620986856280973928032751562
Period: 18 CI: 0.0388803426537568244201128103037
Period: 19 CI: 0.0408824124671119206638332321393
Period: 20 CI: 0.0429914912673533363188535602329
> /*
> Period 13 is the only one that gives a CI close to typical English.
> If we had used decimations starting at the second letter rather than
> the first we would have observed the same thing: period 13 is the
> only one that gives a CI similar to typical English.
> */
> for i:=2 to 20 do
for> print "Period:",i,"CI:",CoincidenceIndex(Decimation(vt1,2,i));
for> end for;
Period: 2 CI: 0.0401858477678573078160928884111
Period: 3 CI: 0.0400698820740001247894178573657
Period: 4 CI: 0.0407708712259676218693716026124
Period: 5 CI: 0.0400453719457851545771265205968
Period: 6 CI: 0.0410969409018921397015920646828
Period: 7 CI: 0.0394337531119954932853586290865
Period: 8 CI: 0.0412368686568935841889726393258
Period: 9 CI: 0.0413236771475267269428575712594
Period: 10 CI: 0.0394975899147200593251761216166
Period: 11 CI: 0.0407829428702676660728490919073
Period: 12 CI: 0.0410223453963663627478544938480
Period: 13 CI: 0.0637841728870319077351611035476
Period: 14 CI: 0.0394205219670221672187238379500
Period: 15 CI: 0.0405261509552145317882868775446
Period: 16 CI: 0.0389452332657200811359026369169
Period: 17 CI: 0.0400237017884076707606119370825
Period: 18 CI: 0.0447923264862908334087412903810
Period: 19 CI: 0.0401740538352560210483707751467
Period: 20 CI: 0.0401925660546350201522615315719
>
> /*
> We can be confident that the Vigenere period is 13. Now we have
> to find the translation ciphers corresponding to all 13 possible
> decimations. This will tell us the Vigenere key.
> */
> SortedFreqDist(Decimation(vt1,1,13));
[ <0.0949720665812492370605468750000, "F">, <0.0893854750320315361022949218750, "P">, 
<0.0893854750320315361022949218750, "T">, <0.0810055863112211227416992187500, "J">, 
<0.0782122900709509849548339843750, "B">, <0.0586592177860438823699951171875, "O">, 
<0.0586592177860438823699951171875, "S">, <0.0558659220114350318908691406250, "I">, 
<0.0530726257711648941040039062500, "U">, <0.0446927375160157680511474609375, "M">, 
<0.0418994412757456302642822265625, "E">, <0.0335195530205965042114257812500, "N">, 
<0.0335195530205965042114257812500, "Q">, <0.0307262570131570100784301757812, "D">, 
<0.0307262570131570100784301757812, "V">, <0.0251396647654473781585693359375, "G">, 
<0.0223463687580078840255737304688, "H">, <0.0167597765102982521057128906250, "C">, 
<0.0167597765102982521057128906250, "Z">, <0.0139664805028587579727172851562, "W">, 
<0.0111731843790039420127868652344, "L">, <0.0111731843790039420127868652344, "X">, 
<0.00279329609475098550319671630859, "K">, <0.00279329609475098550319671630859, "R">, 
<0.00279329609475098550319671630859, "Y">, <0.000000000000000000000000000000, "A"> ]
> /*
> If we look at every 13th letter of the cipher text, starting at the first,
> then 9.49% of the letters we encounter are F's, 8.93% of them are P's,
> 8.93% of them are T's (in fact exactly the same number of T's as P's),
> 8.10% of them are J's, and so on. Usually you only have to look at
> the most frequently occurring letter in the decimation. In this case
> it was F, and presumably it would have been E if the message had not
> been enciphered. So we presume that the translation cipher that was
> applied for this decimation took E to F. Now a translation cipher that
> takes E to F takes A to B. So B is the first letter of the key.
>
> Now we look at the decimation given by taking every 13th letter starting
> at the second, and see which is the most frequently occurring letter.
> */
> SortedFreqDist(Decimation(vt1,2,13));
[ <0.125698324292898178100585937500, "E">, <0.0949720665812492370605468750000,
"A">, <0.0837988825514912605285644531250, "O">,
<0.0810055863112211227416992187500, "T">, <0.0754189947620034217834472656250,
"I">, <0.0698324022814631462097167968750, "R">,
<0.0642458098009228706359863281250, "S">, <0.0530726257711648941040039062500,
"H">, <0.0474860332906246185302734375000, "N">,
<0.0363128492608666419982910156250, "U">, <0.0335195530205965042114257812500,
"F">, <0.0335195530205965042114257812500, "L">,
<0.0307262570131570100784301757812, "D">, <0.0307262570131570100784301757812,
"Y">, <0.0279329610057175159454345703125, "M">,
<0.0251396647654473781585693359375, "C">, <0.0223463687580078840255737304688,
"W">, <0.0195530725177377462387084960938, "V">,
<0.0167597765102982521057128906250, "G">, <0.0111731843790039420127868652344,
"P">, <0.00558659218950197100639343261719, "B">,
<0.00558659218950197100639343261719, "K">, <0.00279329609475098550319671630859,
"J">, <0.00279329609475098550319671630859, "X">,
<0.000000000000000000000000000000, "Q">, <0.000000000000000000000000000000, "Z">
]
> /*
> E is the most frequent letter, followed by A, O, T, I, ... . This is
> pretty typical of standard English! It looks as though the translation
> cipher in this case was the one that takes A to A -- no alphabetic shift
> at all. So the second letter of the key is A
> */
> SortedFreqDist(Decimation(vt1,3,13));
[ <0.136871509253978729248046875000, "X">, <0.0949720665812492370605468750000,
"G">, <0.0893854750320315361022949218750, "H">,
<0.0726256985217332839965820312500, "L">, <0.0698324022814631462097167968750,
"B">, <0.0642458098009228706359863281250, "T">,
<0.0614525140263140201568603515625, "M">, <0.0586592177860438823699951171875,
"K">, <0.0558659220114350318908691406250, "A">,
<0.0474860332906246185302734375000, "P">, <0.0363128492608666419982910156250,
"E">, <0.0279329610057175159454345703125, "V">,
<0.0279329610057175159454345703125, "W">, <0.0279329610057175159454345703125,
"Y">, <0.0223463687580078840255737304688, "F">,
<0.0223463687580078840255737304688, "R">, <0.0167597765102982521057128906250,
"N">, <0.0167597765102982521057128906250, "U">,
<0.0139664805028587579727172851562, "O">, <0.0111731843790039420127868652344,
"D">, <0.0111731843790039420127868652344, "I">,
<0.0111731843790039420127868652344, "Z">, <0.00279329609475098550319671630859,
"C">, <0.000000000000000000000000000000, "J">,
<0.000000000000000000000000000000, "Q">, <0.000000000000000000000000000000, "S">
]
> /*
> E becomes X, so A becomes T. The key is BAT...
> */
> SortedFreqDist(Decimation(vt1,4,13));
[ <0.131284916773438453674316406250, Q>, <0.103351955302059650421142578125, F>,
<0.0782122900709509849548339843750, M>, <0.0754189947620034217834472656250, E>,
<0.0726256985217332839965820312500, U>, <0.0670391060411930084228515625000, A>,
<0.0614525140263140201568603515625, P>, <0.0614525140263140201568603515625, Z>,
<0.0558659220114350318908691406250, T>, <0.0530726257711648941040039062500, D>,
<0.0418994412757456302642822265625, X>, <0.0391061450354754924774169921875, Y>,
<0.0307262570131570100784301757812, G>, <0.0307262570131570100784301757812, O>,
<0.0223463687580078840255737304688, I>, <0.0195530725177377462387084960938, R>,
<0.0195530725177377462387084960938, S>, <0.0111731843790039420127868652344, N>,
<0.00837988825514912605285644531250, H>, <0.00558659218950197100639343261719, B>,
<0.00558659218950197100639343261719, K>, <0.00279329609475098550319671630859, J>,
<0.00279329609475098550319671630859, W>, <0.000000000000000000000000000000, C>,
<0.000000000000000000000000000000, L>, <0.000000000000000000000000000000, V> ]
> /*
> E -> Q means A -> M. BATM...
> */
> SortedFreqDist(Decimation(vt1,5,13));
[ <0.125698324292898178100585937500, E>, <0.0893854750320315361022949218750, T>,
<0.0837988825514912605285644531250, O>, <0.0726256985217332839965820312500, A>,
<0.0670391060411930084228515625000, I>, <0.0642458098009228706359863281250, R>,
<0.0586592177860438823699951171875, N>, <0.0558659220114350318908691406250, S>,
<0.0502793295308947563171386718750, H>, <0.0474860332906246185302734375000, D>,
<0.0474860332906246185302734375000, W>, <0.0391061450354754924774169921875, L>,
<0.0363128492608666419982910156250, Y>, <0.0279329610057175159454345703125, C>,
<0.0251396647654473781585693359375, F>, <0.0251396647654473781585693359375, M>,
<0.0223463687580078840255737304688, U>, <0.0167597765102982521057128906250, B>,
<0.0167597765102982521057128906250, G>, <0.0111731843790039420127868652344, P>,
<0.00837988825514912605285644531250, V>, <0.00558659218950197100639343261719, K>,
<0.00279329609475098550319671630859, X>, <0.000000000000000000000000000000, J>,
<0.000000000000000000000000000000, Q>, <0.000000000000000000000000000000, Z> ]
> /*
> BATMA..
> */
> SortedFreqDist(Decimation(vt1,6,13));
[ <0.125698324292898178100585937500, R>, <0.0977653628215193748474121093750, V>,
<0.0754189947620034217834472656250, B>, <0.0670391060411930084228515625000, U>,
<0.0642458098009228706359863281250, N>, <0.0614525140263140201568603515625, G>,
<0.0586592177860438823699951171875, A>, <0.0530726257711648941040039062500, F>,
<0.0502793295308947563171386718750, E>, <0.0502793295308947563171386718750, Q>,
<0.0474860332906246185302734375000, Z>, <0.0391061450354754924774169921875, Y>,
<0.0335195530205965042114257812500, J>, <0.0307262570131570100784301757812, S>,
<0.0279329610057175159454345703125, H>, <0.0279329610057175159454345703125, L>,
<0.0195530725177377462387084960938, P>, <0.0167597765102982521057128906250, T>,
<0.0139664805028587579727172851562, O>, <0.0111731843790039420127868652344, I>,
<0.0111731843790039420127868652344, X>, <0.00837988825514912605285644531250, C>,
<0.00279329609475098550319671630859, K>, <0.00279329609475098550319671630859, M>,
<0.00279329609475098550319671630859, W>, <0.000000000000000000000000000000, D> ]
> /*
> E -> R means A -> N. BATMAN...
> */
> SortedFreqDist(Decimation(vt1,7,13));
[ <0.122905028052628040313720703125, J>, <0.0977653628215193748474121093750, F>,
<0.0977653628215193748474121093750, N>, <0.0810055863112211227416992187500, X>,
<0.0754189947620034217834472656250, S>, <0.0698324022814631462097167968750, W>,
<0.0670391060411930084228515625000, T>, <0.0586592177860438823699951171875, Y>,
<0.0558659220114350318908691406250, M>, <0.0502793295308947563171386718750, Q>,
<0.0418994412757456302642822265625, I>, <0.0279329610057175159454345703125, R>,
<0.0251396647654473781585693359375, Z>, <0.0223463687580078840255737304688, H>,
<0.0195530725177377462387084960938, G>, <0.0195530725177377462387084960938, L>,
<0.0167597765102982521057128906250, D>, <0.0139664805028587579727172851562, K>,
<0.0139664805028587579727172851562, U>, <0.0111731843790039420127868652344, B>,
<0.00837988825514912605285644531250, P>, <0.00279329609475098550319671630859, A>,
<0.000000000000000000000000000000, C>, <0.000000000000000000000000000000, E>,
<0.000000000000000000000000000000, O>, <0.000000000000000000000000000000, V> ]
> /*
> E -> J means A -> F. BATMANF..
> */
> SortedFreqDist(Decimation(vt1,8,13));
[ <0.103351955302059650421142578125, S>, <0.100558659061789512634277343750, H>,
<0.0865921787917613983154296875000, B>, <0.0865921787917613983154296875000, C>,
<0.0865921787917613983154296875000, W>, <0.0726256985217332839965820312500, G>,
<0.0586592177860438823699951171875, O>, <0.0558659220114350318908691406250, V>,
<0.0418994412757456302642822265625, I>, <0.0391061450354754924774169921875, Z>,
<0.0363128492608666419982910156250, F>, <0.0307262570131570100784301757812, T>,
<0.0279329610057175159454345703125, U>, <0.0251396647654473781585693359375, A>,
<0.0251396647654473781585693359375, R>, <0.0223463687580078840255737304688, M>,
<0.0223463687580078840255737304688, P>, <0.0195530725177377462387084960938, Q>,
<0.0167597765102982521057128906250, D>, <0.0167597765102982521057128906250, J>,
<0.0167597765102982521057128906250, K>, <0.00837988825514912605285644531250, Y>,
<0.000000000000000000000000000000, E>, <0.000000000000000000000000000000, L>,
<0.000000000000000000000000000000, N>, <0.000000000000000000000000000000, X> ]
> /*
> E -> S means A -> O. BATMANFO...
> */
> SortedFreqDist(Decimation(vt1,9,13));
[ <0.103351955302059650421142578125, V>, <0.100558659061789512634277343750, K>,
<0.0837988825514912605285644531250, F>, <0.0837988825514912605285644531250, R>,
<0.0726256985217332839965820312500, E>, <0.0642458098009228706359863281250, U>,
<0.0642458098009228706359863281250, Y>, <0.0614525140263140201568603515625, I>,
<0.0530726257711648941040039062500, J>, <0.0474860332906246185302734375000, Z>,
<0.0391061450354754924774169921875, C>, <0.0391061450354754924774169921875, T>,
<0.0279329610057175159454345703125, G>, <0.0251396647654473781585693359375, D>,
<0.0251396647654473781585693359375, N>, <0.0223463687580078840255737304688, L>,
<0.0223463687580078840255737304688, P>, <0.0195530725177377462387084960938, W>,
<0.0139664805028587579727172851562, B>, <0.0111731843790039420127868652344, S>,
<0.00837988825514912605285644531250, M>, <0.00837988825514912605285644531250, X>,
<0.00279329609475098550319671630859, O>, <0.000000000000000000000000000000, A>,
<0.000000000000000000000000000000, H>, <0.000000000000000000000000000000, Q> ]
> /*
> E -> V means A -> R. BATMANFOR..
> */
> SortedFreqDist(Decimation(vt1,10,13));
[ <0.125698324292898178100585937500, I>, <0.0865921787917613983154296875000, E>,
<0.0865921787917613983154296875000, L>, <0.0810055863112211227416992187500, M>,
<0.0670391060411930084228515625000, S>, <0.0670391060411930084228515625000, W>,
<0.0642458098009228706359863281250, R>, <0.0530726257711648941040039062500, X>,
<0.0474860332906246185302734375000, P>, <0.0474860332906246185302734375000, V>,
<0.0418994412757456302642822265625, H>, <0.0363128492608666419982910156250, C>,
<0.0335195530205965042114257812500, Y>, <0.0251396647654473781585693359375, F>,
<0.0251396647654473781585693359375, G>, <0.0223463687580078840255737304688, K>,
<0.0223463687580078840255737304688, Q>, <0.0195530725177377462387084960938, A>,
<0.0167597765102982521057128906250, O>, <0.0111731843790039420127868652344, J>,
<0.0111731843790039420127868652344, T>, <0.00837988825514912605285644531250, Z>,
<0.000000000000000000000000000000, B>, <0.000000000000000000000000000000, D>,
<0.000000000000000000000000000000, N>, <0.000000000000000000000000000000, U> ]
> /*
> E -> I means A -> R. BATMANFORE..
> */
> SortedFreqDist(Decimation(vt1,11,13));
[ <0.145251397043466567993164062500, Z>, <0.106145251542329788208007812500, O>,
<0.106145251542329788208007812500, V>, <0.0921787712723016738891601562500, J>,
<0.0698324022814631462097167968750, D>, <0.0642458098009228706359863281250, C>,
<0.0558659220114350318908691406250, N>, <0.0502793295308947563171386718750, I>,
<0.0474860332906246185302734375000, Y>, <0.0446927375160157680511474609375, M>,
<0.0391061450354754924774169921875, G>, <0.0363128492608666419982910156250, H>,
<0.0307262570131570100784301757812, X>, <0.0195530725177377462387084960938, A>,
<0.0167597765102982521057128906250, P>, <0.0167597765102982521057128906250, R>,
<0.0167597765102982521057128906250, W>, <0.0139664805028587579727172851562, T>,
<0.00837988825514912605285644531250, B>, <0.00837988825514912605285644531250, K>,
<0.00558659218950197100639343261719, Q>, <0.00279329609475098550319671630859, E>,
<0.00279329609475098550319671630859, F>, <0.000000000000000000000000000000, L>,
<0.000000000000000000000000000000, S>, <0.000000000000000000000000000000, U> ]
> /*
> E -> Z means A -> V. BATMANFOREV..
> */
> SortedFreqDist(Decimation(vt1,12,13));
[ <0.120111731812357902526855468750, I>, <0.0949720665812492370605468750000, M>,
<0.0782122900709509849548339843750, E>, <0.0782122900709509849548339843750, X>,
<0.0726256985217332839965820312500, W>, <0.0670391060411930084228515625000, L>,
<0.0614525140263140201568603515625, R>, <0.0586592177860438823699951171875, H>,
<0.0530726257711648941040039062500, S>, <0.0530726257711648941040039062500, V>,
<0.0474860332906246185302734375000, Q>, <0.0446927375160157680511474609375, P>,
<0.0335195530205965042114257812500, G>, <0.0335195530205965042114257812500, Y>,
<0.0279329610057175159454345703125, C>, <0.0223463687580078840255737304688, A>,
<0.0111731843790039420127868652344, F>, <0.0111731843790039420127868652344, J>,
<0.0111731843790039420127868652344, T>, <0.00837988825514912605285644531250, K>,
<0.00837988825514912605285644531250, Z>, <0.00279329609475098550319671630859, O>,
<0.000000000000000000000000000000, B>, <0.000000000000000000000000000000, D>,
<0.000000000000000000000000000000, N>, <0.000000000000000000000000000000, U> ]
> /*
> E -> I means A -> E. BATMANFOREVE.
> */
> SortedFreqDist(Decimation(vt1,13,13));
[ <0.142458099871873855590820312500, V>, <0.0921787712723016738891601562500, J>,
<0.0782122900709509849548339843750, K>, <0.0754189947620034217834472656250, E>,
<0.0726256985217332839965820312500, F>, <0.0698324022814631462097167968750, Z>,
<0.0642458098009228706359863281250, R>, <0.0558659220114350318908691406250, Y>,
<0.0474860332906246185302734375000, I>, <0.0446927375160157680511474609375, L>,
<0.0363128492608666419982910156250, C>, <0.0363128492608666419982910156250, U>,
<0.0307262570131570100784301757812, N>, <0.0251396647654473781585693359375, T>,
<0.0223463687580078840255737304688, D>, <0.0223463687580078840255737304688, P>,
<0.0223463687580078840255737304688, W>, <0.0167597765102982521057128906250, G>,
<0.0167597765102982521057128906250, X>, <0.0111731843790039420127868652344, M>,
<0.00837988825514912605285644531250, S>, <0.00558659218950197100639343261719, B>,
<0.00279329609475098550319671630859, O>, <0.000000000000000000000000000000, A>,
<0.000000000000000000000000000000, H>, <0.000000000000000000000000000000, Q> ]
> /*
> E -> V means A -> R. BATMANFOREVER
> This is the complete key
> */
> vt1;
UOLTEEQCTOCSCNELEHRNGRPREPTTAQWBROEMCEMFSXXDBRVVEMHYJMFQNGNCELZVLODXDAADCKLZVEBMXUNUNGVCZ\
WJIEXOLVUGVWVRUQRXPOZNBRXZWKIEPTOYJCWLZVJFXBFWNXBFXOLRUHXREYYOECZQFUIHZAXNBKSGSMFFHDIEJBV\
EYPVSAEXEZTHZSIWRODMTAGTBVTVVKJCNXAEQMNIMIRCHHDRRSHKSCMJDOEPPEJQZWZFLUAWYIEFPCCWECBNVQDZN\
BULZARTIMMKRNHKLZQFTTIQRSJQKVZEJPNBZGNSRFFNIIWIGSMNHVZRZXYBTMTEJTFCHCEJTEXZBHYOJEGSMFRAQW\
BZZULVZVQLTOEQMWDWZPWJNTRAYXSGSNMKJOGTEAJJVVNTFLEHRTUJGFJOIIQALEIBSGJEQINJTAMGVGSRRYEJOEX\
DTUJMNIMIREMBDAOQSKLDRXTFHDTUJCSWZVMFRXJCRQZVROJFSDKMWVSUKLZZVJLYDOZRSEWHSKJVXEAAIOTXDSET\
BNFFBWHYIOVRJNXPTRFGFRZVKPAWYIGXITLDRKSULUOAXWEXJLZTOPZDRQWTEOIRODYUNRQMRHEYJUEWFEZUSIEHI\
EUWTETBNBKVJHLDETPIFYFRGOMEHFTOTBWKYMXLDJGAFTUWCNEYSLCTNBOAFZCLDWDFNMMLEJGLPOWXSIMUNNXSEW\
DXZWEBZSGWIDIIXFSAVDAPPWESIIFGHBEOJSVZKCTFXEKXEAXSJAJYCENHFBRRCIIYMJUUKNIALHYEIEJURHZGRRC\
KMJRZOAGMTHWSJYXLRTHBEAAIMVXOLVSEPMSOZHFRZAFNAGFOUNARRYXYBTPAMNSKRWOLVMAMQIEJBVEYPVSOYPUO\
NCLWVRURUXETVTBRFGIDFMHDYVMOUWZIEMIMFLRTTYSGQVTLTFEYDAPQVVIJAZQHNIRIMAXVEULMWNDTISHIRDHHF\
HRWAPSRRTPMIXEGJVRTKMEFSLMNQYVVLJQVDEGFRRIWEXZVVTTLIHVHVIMNILQAKAUAIHYIHEEXHHRIEXHWMIHJII\
FEEYKARWOIIPFAUSBBBVWOESMILTMRSHNIMIJVFYUCVJBKXJESTOKNAYQAPEOXVOTBANJMWCICSCNELIHBQCRXCIU\
FVXDYSTFDSAWFDIXFYJNHYLDWNIOEQBBMSDMVRJPUEDEZFWEIYMEPUKXOQLWEKNMECADQRFYFVIOFLSIXPAZTBXLD\
WFMDUAOXXOEHVPKFRGMTVSUWVJQNFEDFOJJSBFZXNFEGOOPFWEIVRUBMUUTVTBKLZHIPWLUNRXGFJOLVERNSAAIHY\
IAMVSCXQNRWUPSALZTOPZKRJBEEOYIFHXIAFXHZPGEJFVXDDRJDCCVXKSAVFEQGMKLZWKVDRAFPWWDIVRUPCVGPVJ\
RYMNMDNEGEESFQLPOMVTAGPEKYFRSMHZOAKKPBBSIWJJFCSXDVNYWFRDRWPLEAWVSUFYOXYPSXOLHJGRRYGCFAKUN\
TZDKLJWVNYLFEENSJACMTIHTPBRJBRFVRUPNXPAFMCGIGIJTBRFHRTTWMXMRMPHXIPJTISHXZNEMATVRSZLZEIESH\
YEIFULIVGTPUGFOSMWJHJMEHSHRHVXGLQHSETTHADRXGRMIXYFCTEEBKHYIOVVQOYRMHWRVVJJYJSVXENWWEKPTFG\
TAQSVSULPVVKSAZQDLTTKLZEKLIGEOAGFFXCIITAMFRVSQFQVPVFAGPFVSOCPTSWUHXYIFXWFRRLZDHAQHNIOTGJQ\
GMILTEQXCUIGMTBTXXYNSRJYXGVTSYGLYDTFVOLVSEBSNVSUWEHMCZOYTOYQOEHWIPPNWFHRXSJMBRJPFAUSNHHZZ\
DXPIOPQVRWKYMXLZNEKQLLXVRVZHNJTAMLYYVVVZEUFRLAFGMSUEDPPQRXESVPBVAGMKULXAFZDTFVHIIGRBQNQFB\
UGJQGBNBANBSSEMBLKJTPMSBSHYIOAVOTBQTUTTDEMGYJWTERRYIIRDRXGRHYAWTIIRZCKPAIMTVJBKJJVZIAWZOJ\
WSKYMRVETHOIINZGVVGKJCXIHRSAPAVCCFDFQTUWCLKCFRLEKETEJSKENMGBSLQDGMSNIGPIFMXYBRWSUHJSIXHBO\
HZZGKEGARZSUQAFXCTMVXVEIGYYZNBUADXYNYPAOVSURRYAZUHMTEQFFBMIGZEEGFSBKHYINXLEYBZSPFFCIOMNBS\
LQIMJRNMOLRLEXZDRXWIIOSJFEAALZJGRKVMEBNWFOXSCNLJAYFWTEEZUZFCDRXIILQXGWOFVYMEBRRBOJJFJLDWI\
POFEWRWSSVDPCJAGFLLQWKEIHVWEGMSVQCFOZHLQILMWUNGKEGPJQAKQFVLIIIKEJTTPUCRNBRHVVBTIETOHJHKIV\
KRJNLFTUJPCMIHYFWTEPNHWEKOLVSOHYSJNTKPTIRHEKXYJNHYLDWYFAWEUAPIGSILZTCAQSGFBULDWYBNWECYFGG\
IYFVIIGPHVRHFQZAYPKGQWUNGVZZVPNOHPAAIVRFDXYJSTFTVYIUIVRUNAGZEEYCCHOLVJRHINFYCICCINBSTFWBW\
YRKVMEIEAMDENGVRJYKPFAUSQWIXGMIRUEWPRRFAJEIHNBSAATHUCEXCIJDEGFOSXCDIIINQRHNLRRWIEIKKIEUQL\
YFBUAVWJIOPZUCYCKLZGYBMUQRJMWTLCEUGOKYEEQMSIZRZOPTDTZDCNRCMJNAGZEEBOJRJXVGFNEIIJWKWZPUPMP\
MSOZHYIREJHLTPIGMWEOOSJFEFQWVYVYEMHCZAPARQXDFOZRSVTPUTUFYZRYPPFYXTEJFJVHHIKPAGMRZHVRMMXYS\
EPMCETGJLDWTBSXAFPNURVNEEEIGPIPFHVHVWGJRBFCNXSRRYEXBSHSEAJWEXCITPRGQRGMSELZWKPOWNESTFVXCI\
WJRXMNQQCFOZHDFOOQRVSVZWNMEHUEMRVSHISNTVDTBHESFGYMJRNFDEACXXIZXNCFVHXDEZFFBIYMKIIGWWNYGFR\
OLRUYHGHNASGYOSETEOQNNSRRLVPWQONZDFXWEGZMJBWRAUFJJVRDEETWXDEQNBUIZHZTHHGLQMOMIOLFVGAFAYNH\
KPZQFSECGSGFHIMAPVNOKQISFBTCREKTOGMNQNBGVVGKJCXMGNNBZSWWVSVXKOHIWURJXKFLEYEGMOKCJYZOTXZDR\
IHFKJMEUOAMRAJGJXCIEIOPPOLTIBRJAZTEXUTVISUYXIZUHHIDBNYESRXYBTRAUUFJVFZIEHEMFIALMFYMWVMFOQ\
RLBSKPVXVMYTZDGMOKCJYYBVXMMBXHTPPQJZAGPCNWSCINWJFROMNGLWIPHCUFAKTOYRSJWVMUJTAUSVXHFSHYTIY\
HGWBZZUGZVKBIGXYUFJVFZIECUKZEQMOUCJYCJVXPASJKTIIXLSIXEATTWKMNXIVEMTAGNVRHVGFVNMDYJFZBSIXY\
VRLPALFBUGVQVIOFQIAFRIIVHWVLFQSFGIKENMYBVXOHNSUVHHCTMOMTEFNQRROMDBGBZEUTKPSPHVEUVQIGFGKSH\
EIZJTZEFMSZWDRTPRKUGVGZVEIHDZWBREUFGXMQIEIEKZOGNQVFPXKIEKQATFWEMAEZMTHEERMCNCJYNPRDUTBZHY\
IXLLDKEQDGTVZQNICGAGPRHGPVHCMJMOGSNRWJFYNLRODLFOTJHYIMMKJSLUMCQWTMOCZUSXXFFFWULZQPFYXETRQ\
ZDIOLRUOGFHRNBJMYIFGYHGRYJTKWCSVKULFWUJFVXCIWJRXXITMHJXMMBFSBFTUJZVEOLVSILECBWSUFTWZYAEYO\
FYDRVVPCFLVGTFTPMMJYJMYMTELMOMIWIVOCTGSRIPPWJQVPNXIHBMOJZZVPDAKQLRXGCCNGIBPXPRBZBUXCIVEGX\
EOSYVVWJPVJNHDDRWHFVZQFWEVDUFYSUQPHWSOFUTUJBTITSLTEXYYQTISPZHVEUVFIBSHYEOCFVHTPBRJBFYOMEW\
IEQWRFHYIMEEETAMTLTIYEYEGBRMUCHQOIPTQRMIZZAAYPFSOWCJTMUNTXDVGDQVOOYFHRQCEHJRJMAOQYNXHFCJY\
IQRTOTVHSZJVKVOTEQMNSKRPFWZOTHYYETCDWNQVMLBZGBKWFHJJFSMPUTUFPCEXODBRDAFANHIEOIFGSBXVRWIGS\
ILZTRBSHGKCIIAMEHEKMNQFPLPBIFOTAQRVLVKWDHVPFAUSGTDYEOXFTHHIWUJFVLZLRTSXORRYSULDWJUEMTOFHC\
GIDQLTTUQDHQZZRYIVEIYUDBSCKTMSEPUGOEUNAKSWIROAVFIIJAVQWIIPFMTEZJRZGVPGSOYQSFNCEMXSLMDGATU\
JZGPVYXIIGSAGYVVIVWVXIMTWUNQYLZIOQLTUNRIVZWKVFDELEOSISUYXXZPNPTEANVVEMCFVGBHELTIIVZEJPNLU\
RRROIOZHKIEMTIALOCAVCJBPIQAEXHFQZXFCELARVIWTYGSLTLREIZUZVXCEKJCHGLQJOJMGCUPIMYYFJZWXCSLHH\
TFENHVJYXGVTSBHEVSGKEIGVPFRAUEWSRWJRZOGBMMOFTWPZHLOTBXYBZSOTGEZOYHGRCWCTINWRODRQTVGSCMZZV\
UHTFMLJMVWVVVBSZAOQFGPSPVJ
> V1:=VigenereCryptosystem(13);
> k1:=V1!"BATMANFOREVER";
> Enciphering(InverseKey(k1),Encoding(V1,vt1));
TOSHERLOCKHOLMESSHEISALWAYSTHEWOMANIHAVESELDOMHEARDHIMMENTIONHERUNDERANYOTHERNA\
MEINHISEYESSHEECLIPSESANDPREDOMINATESTHEWHOLEOFHERSEXITWASNOTTHATHEFELTANYEMOTI\
ONAKINTOLOVEFORIRENEADLERALLEMOTIONSANDTHATONEPARTICULARLYWEREABHORRENTTOHISCOL\
DPRECISEBUTADMIRABLYBALANCEDMINDHEWASITAKEITTHEMOSTPERFECTREASONINGANDOBSERVING\
MACHINETHATTHEWORLDHASSEENBUTASALOVERHEWOULDHAVEPLACEDHIMSELFINAFALSEPOSITIONHE\
NEVERSPOKEOFTHESOFTERPASSIONSSAVEWITHAGIBEANDASNEERTHEYWEREADMIRABLETHINGSFORTH\
EOBSERVEREXCELLENTFORDRAWINGTHEVEILFROMMENSMOTIVESANDACTIONSBUTFORTHETRAINEDTEA\
SONERTOADMITSUCHINTRUSIONSINTOHISOWNDELICATEANDFINELYADJUSTEDTEMPERAMENTWASTOIN\
TRODUCEADISTRACTINGFACTORWHICHMIGHTTHROWADOUBTUPONALLHISMENTALRESULTSGRITINASEN\
SITIVEINSTRUMENTORACRACKINONEOFHISOWNHIGHPOWERLENSESWOULDNOTBEMOREDISTURBINGTHA\
NASTRONGEMOTIONINANATURESUCHASHISANDYETTHEREWASBUTONEWOMANTOHIMANDTHATWOMANWAST\
HELATEIRENEADLEROFDUBIOUSANDQUESTIONABLEMEMORYIHADSEENLITTLEOFHOLMESLATELYMYMAR\
RIAGEHADDRIFTEDUSAWAYFROMEACHOTHERMYOWNCOMPLETEHAPPINESSANDTHEHOMECENTREDINTERE\
STSWHICHRISEUPAROUNDTHEMANWHOFIRSTFINDSHIMSELFMASTEROFHISOWNESTABLISHMENTWERESU\
FFICIENTTOABSORBALLMYATTENTIONWHILEHOLMESWHOLOATHEDEVERYFORMOFSOCIETYWITHHISWHO\
LEBOHEMIANSOULREMAINEDINOURLODGINGSINBAKERSTREETBURIEDAMONGHISOLDBOOKSANDALTERN\
ATINGFROMWEEKTOWEEKBETWEENCOCAINEANDAMBITIONTHEDROWSINESSOFTHEDRUGANDTHEFIERCEE\
NERGYOFHISOWNKEENNATUREHEWASSTILLASEVERDEEPLYATTRACTEDBYTHESTUDYOFCRIMEANDOCCUP\
IEDHISIMMENSEFACULTIESANDEXTRAORDINARYPOWERSOFOBSERVATIONINFOLLOWINGOUTTHOSECLU\
ESANDCLEARINGUPTHOSEMYSTERIESWHICHHADBEENABANDONEDASHOPELESSBYTHEOFFICIALPOLICE\
FROMTIMETOTIMEIHEARDSOMEVAGUEACCOUNTOFHISDOINGSOFHISSUMMONSTOODESSAINTHECASEOFT\
HETREPOFFMURDEROFHISCLEARINGUPOFTHESINGULARTRAGEDYOFTHEATKINSONBROTHERSATTRINCO\
MALEEANDFINALLYOFTHEMISSIONWHICHHEHADACCOMPLISHEDSODELICATELYANDSUCCESSFULLYFOR\
THEREIGNINGFAMILYOFHOLLANDBEYONDTHESESIGNSOFHISACTIVITYHOWEVERWHICHIMERELYSHARE\
DWITHALLTHEREADERSOFTHEDAILYPRESSIKNEWLITTLEOFMYFORMERFRIENDANDCOMPANIONONENIGH\
TITWASONTHETWENTIETHOFMARCHIWASRETURNINGFROMAJOURNEYTOAPATIENTFORIHADNOWRETURNE\
DTOCIVILPRACTICEWHENMYWAYLEDMETHROUGHBAKERSTREETASIPASSEDTHEWELLREMEMBEREDDOORW\
HICHMUSTALWAYSBEASSOCIATEDINMYMINDWITHMYWOOINGANDWITHTHEDARKINCIDENTSOFTHESTUDY\
INSCARLETIWASSEIZEDWITHAKEENDESIRETOSEEHOLMESAGAINANDTOKNOWHOWHEWASEMPLOYINGHIS\
EXTRAORDINARYPOWERSHISROOMSWEREBRILLIANTLYLITANDEVENASILOOKEDUPISAWHISTALLSPARE\
FIGUREPASSTWICEINADARKSILHOUETTEAGAINSTTHEBLINDHEWASPACINGTHEROOMSWIFTLYEAGERLY\
WITHHISHEADSUNKUPONHISCHESTANDHISHANDSCLASPEDBEHINDHIMTOMEWHOKNEWHISEVERYMOODAN\
DHABITHISATTITUDEANDMANNERTOLDTHEIROWNSTORYHEWASATWORKAGAINHEHADRISENOUTOFHISDR\
UGCREATEDDREAMSANDWASHOTUPONTHESCENTOFSOMENEWPROBLEMIRANGTHEBELLANDWASSHOWNUPTO\
THECHAMBERWHICHHADFORMERLYBEENINPARTMYOWNHISMANNERWASNOTEFFUSIVEITSELDOMWASBUTH\
EWASGLADITHINKTOSEEMEWITHHARDLYAWORDSPOKENBUTWITHAKINDLYEYEHEWAVEDMETOANARMCHAI\
RTHREWACROSSHISCASEOFCIGARSANDINDICATEDASPIRITCASEANDAGASOGENEINTHECORNERTHENHE\
STOODBEFORETHEFIREANDLOOKEDMEOVERINHISSINGULARINTROSPECTIVEFASHIONWEDLOCKSUITSY\
OUHEREMARKEDITHINKWATSONTHATYOUHAVEPUTONSEVENANDAHALFPOUNDSSINCEISAWYOUSEVENIAN\
SWEREDINDEEDISHOULDHAVETHOUGHTALITTLEMOREJUSTATRIFLEMOREIFANCYWATSONANDINPRACTI\
CEAGAINIOBSERVEYOUDIDNOTTELLMETHATYOUINTENDEDTOGOINTOHARNESSTHENHOWDOYOUKNOWISE\
EITIDEDUCEITHOWDOIKNOWTHATYOUHAVEBEENGETTINGYOURSELFVERYWETLATELYANDTHATYOUHAVE\
AMOSTCLUMSYANDCARELESSSERVANTGIRLMYDEARHOLMESSAIDITHISISTOOMUCHYOUWOULDCERTAINL\
YHAVEBEENBURNEDHADYOULIVEDAFEWCENTURIESAGOITISTRUETHATIHADACOUNTRYWALKONTHURSDA\
YANDCAMEHOMEINADREADFULMESSBUTASIHAVECHANGEDMYCLOTHESICANTIMAGINEHOWYOUDEDUCEIT\
ASTOMARYJANESHEISINCORRIGIBLEANDMYWIFEHASGIVENHERNOTICEBUTTHEREAGAINIFAILTOSEEH\
OWYOUWORKITOUTHECHUCKLEDTOHIMSELFANDRUBBEDHISLONGNERVOUSHANDSTOGETHERITISSIMPLI\
CITYITSELFSAIDHEMYEYESTELLMETHATONTHEINSIDEOFYOURLEFTSHOEJUSTWHERETHEFIRELIGHTS\
TRIKESITTHELEATHERISSCOREDBYSIXALMOSTPARALLELCUTSOBVIOUSLYTHEYHAVEBEENCAUSEDBYS\
OMEONEWHOHASVERYCARELESSLYSCRAPEDROUNDTHEEDGESOFTHESOLEINORDERTOREMOVECRUSTEDMU\
DFROMITHENCEYOUSEEMYDOUBLEDEDUCTIONTHATYOUHADBEENOUTINVILEWEATHERANDTHATYOUHADA\
PARTICULARLYMALIGNANTBOOTSLITTINGSPECIMENOFTHELONDONSLAVEYASTOYOURPRACTICEIFAGE\
NTLEMANWALKSINTOMYROOMSSMELLINGOFIODOFORMWITHABLACKMARKOFNITRATEOFSILVERUPONHIS\
RIGHTFOREFINGERANDABULGEONTHERIGHTSIDEOFHISTOPHATTOSHOWWHEREHEHASSECRETEDHISSTE\
THOSCOPEIMUSTBEDULLINDEEDIFIDONOTPRONOUNCEHIMTOBEANACTIVEMEMBEROFTHEMEDICALPROF\
ESSIONICOULDNOTHELPLAUGHINGATTHEEASEWITHWHICHHEEXPLAINEDHISPROCESSOFDEDUCTIONWH\
ENIHEARYOUGIVEYOURREASONSIREMARKEDTHETHINGALWAYSAPPEARSTOMETOBESORIDICULOUSLYSI\
MPLETHATICOULDEASILYDOITMYSELFTHOUGHATEACHSUCCESSIVEINSTANCEOFYOURREASONINGIAMB\
AFFLEDUNTILYOUEXPLAINYOURPROCESSANDYETIBELIEVETHATMYEYESAREASGOODASYOURS
> /*
> From "A Scandal in Bohemia" by Conan-Doyle
>
> Let us try the same method on vt2
> */
> for i:=2 to 25 do
for> print "Period:",i,"CI:",CoincidenceIndex(Decimation(vt2,1,i));
for> end for;
Period: 2 CI: 0.0444364912450018832997556401812
Period: 3 CI: 0.0402948402948402948402948402949
Period: 4 CI: 0.0452469748598105765876955273537
Period: 5 CI: 0.0524070535385027992892822421134
Period: 6 CI: 0.0421079386596627975938320765907
Period: 7 CI: 0.0425517900075750090570760465040
Period: 8 CI: 0.0457937877480586712683347713546
Period: 9 CI: 0.0395790624572912395790624572912
Period: 10 CI: 0.0605477973419685623692909667409
Period: 11 CI: 0.0411723941135705841588194529371
Period: 12 CI: 0.0431156416134224259864410086329
Period: 13 CI: 0.0415860735009671179883945841393
Period: 14 CI: 0.0416583615706597568267889176799
Period: 15 CI: 0.0529425130652124517155192001818
Period: 16 CI: 0.0451376786336702683861972812827
Period: 17 CI: 0.0424505072392396336058307889294
Period: 18 CI: 0.0402432283029297954671088999447
Period: 19 CI: 0.0398622047244094488188976377953
Period: 20 CI: 0.0681479474325972090502641918439
Period: 21 CI: 0.0418290854572713643178410794603
Period: 22 CI: 0.0386568386568386568386568386568
Period: 23 CI: 0.0380952380952380952380952380953
Period: 24 CI: 0.0425742574257425742574257425743
Period: 25 CI: 0.0539089347079037800687285223368
> /*
> For period 10 the CI is over 0.06; so the length of
> the key is probably 10. Note that 20 also gives a high
> CI: it is always true that multiples of the keyword length
> give high values for the CI. It is best to assume that
> the smallest number that gives a CI near 0.06 is the
> keyword length.
> */
> SortedFreqDist(Decimation(vt2,1,10));
[ <0.106557376682758331298828125000, K>, <0.102459016256034374237060546875, Z>,
<0.0983606558293104171752929687500, U>, <0.0655737705528736114501953125000, G>,
<0.0655737705528736114501953125000, T>, <0.0573770492337644100189208984375, O>,
<0.0573770492337644100189208984375, X>, <0.0532786883413791656494140625000, R>,
<0.0532786883413791656494140625000, Y>, <0.0491803279146552085876464843750, A>,
<0.0491803279146552085876464843750, N>, <0.0491803279146552085876464843750, S>,
<0.0409836065955460071563720703125, J>, <0.0286885246168822050094604492188, H>,
<0.0286885246168822050094604492188, I>, <0.0204918032977730035781860351562, V>,
<0.0163934426382184028625488281250, C>, <0.0163934426382184028625488281250, L>,
<0.0122950819786638021469116210938, B>, <0.0122950819786638021469116210938, E>,
<0.0122950819786638021469116210938, M>, <0.00409836065955460071563720703125, P>,
<0.000000000000000000000000000000, D>, <0.000000000000000000000000000000, F>,
<0.000000000000000000000000000000, Q>, <0.000000000000000000000000000000, W> ]
> /*
> Assuming that the most frequent letter represents E then the one that
> represents A is four places earlier than the most frequent letter
> */
> alphabet[Index(alphabet,"K")-4];
G
> /*
> It looks like G is the first letter of the key
> */
> SortedFreqDist(Decimation(vt2,2,10));
[ <0.118852458894252777099609375000, S>, <0.0942622954025864601135253906250, C>,
<0.0942622954025864601135253906250, H>, <0.0737704914063215255737304687500, O>,
<0.0696721309795975685119628906250, F>, <0.0655737705528736114501953125000, B>,
<0.0614754096604883670806884765625, W>, <0.0573770492337644100189208984375, R>,
<0.0491803279146552085876464843750, A>, <0.0450819670222699642181396484375, V>,
<0.0450819670222699642181396484375, Z>, <0.0409836065955460071563720703125, G>,
<0.0368852457031607627868652343750, Q>, <0.0286885246168822050094604492188, M>,
<0.0245901639573276042938232421875, T>, <0.0204918032977730035781860351562, K>,
<0.0163934426382184028625488281250, D>, <0.0163934426382184028625488281250, I>,
<0.0163934426382184028625488281250, P>, <0.0122950819786638021469116210938, J>,
<0.00819672131910920143127441406250, U>, <0.00409836065955460071563720703125, Y>,
<0.000000000000000000000000000000, E>, <0.000000000000000000000000000000, L>,
<0.000000000000000000000000000000, N>, <0.000000000000000000000000000000, X> ]
> alphabet[Index(alphabet,"S")-4];
O
> /*
> Probably the 2nd letter of the key
> */
> SortedFreqDist(Decimation(vt2,3,10));
[ <0.122950819320976734161376953125, X>, <0.0901639340445399284362792968750, T>,
<0.0860655736178159713745117187500, M>, <0.0696721309795975685119628906250, H>,
<0.0655737705528736114501953125000, A>, <0.0614754096604883670806884765625, B>,
<0.0614754096604883670806884765625, L>, <0.0532786883413791656494140625000, G>,
<0.0532786883413791656494140625000, K>, <0.0491803279146552085876464843750, F>,
<0.0491803279146552085876464843750, R>, <0.0368852457031607627868652343750, Z>,
<0.0327868852764368057250976562500, N>, <0.0327868852764368057250976562500, V>,
<0.0327868852764368057250976562500, W>, <0.0286885246168822050094604492188, E>,
<0.0204918032977730035781860351562, P>, <0.0163934426382184028625488281250, Y>,
<0.0122950819786638021469116210938, U>, <0.00819672131910920143127441406250, D>,
<0.00819672131910920143127441406250, I>, <0.00819672131910920143127441406250, O>,
<0.000000000000000000000000000000, C>, <0.000000000000000000000000000000, J>,
<0.000000000000000000000000000000, Q>, <0.000000000000000000000000000000, S> ]
> alphabet[Index(alphabet,"X")-4];
T
> SortedFreqDist(Decimation(vt2,4,10));
[ <0.106557376682758331298828125000, P>, <0.0860655736178159713745117187500, L>,
<0.0819672131910920143127441406250, Y>, <0.0778688527643680572509765625000, O>,
<0.0737704914063215255737304687500, V>, <0.0696721309795975685119628906250, A>,
<0.0696721309795975685119628906250, U>, <0.0614754096604883670806884765625, H>,
<0.0532786883413791656494140625000, Z>, <0.0491803279146552085876464843750, T>,
<0.0450819670222699642181396484375, F>, <0.0327868852764368057250976562500, J>,
<0.0327868852764368057250976562500, S>, <0.0286885246168822050094604492188, K>,
<0.0245901639573276042938232421875, B>, <0.0245901639573276042938232421875, D>,
<0.0245901639573276042938232421875, W>, <0.0163934426382184028625488281250, I>,
<0.0122950819786638021469116210938, C>, <0.0122950819786638021469116210938, M>,
<0.00819672131910920143127441406250, N>, <0.00409836065955460071563720703125, Q>,
<0.00409836065955460071563720703125, R>, <0.000000000000000000000000000000, E>,
<0.000000000000000000000000000000, G>, <0.000000000000000000000000000000, X> ]
> alphabet[Index(alphabet,"P")-4];
L
> /*
> So far the probable key is GOTL...
> */
> SortedFreqDist(Decimation(vt2,5,10));
[ <0.143442623317241668701171875000, E>, <0.102459016256034374237060546875, T>,
<0.0778688527643680572509765625000, I>, <0.0778688527643680572509765625000, R>,
<0.0696721309795975685119628906250, O>, <0.0532786883413791656494140625000, A>,
<0.0532786883413791656494140625000, L>, <0.0532786883413791656494140625000, N>,
<0.0491803279146552085876464843750, H>, <0.0450819670222699642181396484375, C>,
<0.0409836065955460071563720703125, S>, <0.0327868852764368057250976562500, M>,
<0.0327868852764368057250976562500, U>, <0.0327868852764368057250976562500, Y>,
<0.0286885246168822050094604492188, F>, <0.0204918032977730035781860351562, D>,
<0.0163934426382184028625488281250, G>, <0.0163934426382184028625488281250, P>,
<0.0163934426382184028625488281250, V>, <0.00819672131910920143127441406250, B>,
<0.00819672131910920143127441406250, K>, <0.00819672131910920143127441406250, W>,
<0.00819672131910920143127441406250, X>, <0.00409836065955460071563720703125, Z>,
<0.000000000000000000000000000000, J>, <0.000000000000000000000000000000, Q> ]
> /*
> E is represented by E; so A is represented by A
> GOTLA...
> */
> SortedFreqDist(Decimation(vt2,6,10));
[ <0.131147541105747222900390625000, Q>, <0.0860655736178159713745117187500, A>,
<0.0860655736178159713745117187500, M>, <0.0819672131910920143127441406250, E>,
<0.0819672131910920143127441406250, U>, <0.0819672131910920143127441406250, Z>,
<0.0778688527643680572509765625000, T>, <0.0614754096604883670806884765625, F>,
<0.0491803279146552085876464843750, D>, <0.0368852457031607627868652343750, Y>,
<0.0327868852764368057250976562500, G>, <0.0327868852764368057250976562500, X>,
<0.0286885246168822050094604492188, P>, <0.0286885246168822050094604492188, R>,
<0.0245901639573276042938232421875, O>, <0.0204918032977730035781860351562, I>,
<0.0163934426382184028625488281250, N>, <0.0163934426382184028625488281250, S>,
<0.0122950819786638021469116210938, K>, <0.00409836065955460071563720703125, B>,
<0.00409836065955460071563720703125, C>, <0.00409836065955460071563720703125, H>,
<0.000000000000000000000000000000, J>, <0.000000000000000000000000000000, L>,
<0.000000000000000000000000000000, V>, <0.000000000000000000000000000000, W> ]
> alphabet[Index(alphabet,"Q")-4];
M
> /*
> GOTLAM...
> */
> SortedFreqDist(Decimation(vt2,7,10));
[ <0.155737705528736114501953125000, G>, <0.106557376682758331298828125000, V>,
<0.0778688527643680572509765625000, Q>, <0.0737704914063215255737304687500, C>,
<0.0696721309795975685119628906250, P>, <0.0655737705528736114501953125000, U>,
<0.0491803279146552085876464843750, J>, <0.0491803279146552085876464843750, K>,
<0.0491803279146552085876464843750, O>, <0.0450819670222699642181396484375, W>,
<0.0409836065955460071563720703125, F>, <0.0368852457031607627868652343750, H>,
<0.0368852457031607627868652343750, T>, <0.0245901639573276042938232421875, D>,
<0.0245901639573276042938232421875, I>, <0.0204918032977730035781860351562, E>,
<0.0204918032977730035781860351562, Y>, <0.0163934426382184028625488281250, N>,
<0.0122950819786638021469116210938, A>, <0.0122950819786638021469116210938, X>,
<0.00409836065955460071563720703125, M>, <0.00409836065955460071563720703125, R>,
<0.00409836065955460071563720703125, S>, <0.000000000000000000000000000000, B>,
<0.000000000000000000000000000000, L>, <0.000000000000000000000000000000, Z> ]
> alphabet[Index(alphabet,"G")-4];
C
> /*
> GOTLAMC...
> */
> SortedFreqDist(Decimation(vt2,8,10));
[ <0.110655738040804862976074218750, M>, <0.106557376682758331298828125000, I>,
<0.102459016256034374237060546875, A>, <0.0819672131910920143127441406250, Q>,
<0.0778688527643680572509765625000, B>, <0.0696721309795975685119628906250, Z>,
<0.0655737705528736114501953125000, V>, <0.0655737705528736114501953125000, W>,
<0.0532786883413791656494140625000, P>, <0.0368852457031607627868652343750, G>,
<0.0368852457031607627868652343750, U>, <0.0245901639573276042938232421875, E>,
<0.0245901639573276042938232421875, T>, <0.0204918032977730035781860351562, C>,
<0.0204918032977730035781860351562, N>, <0.0204918032977730035781860351562, O>,
<0.0163934426382184028625488281250, J>, <0.0163934426382184028625488281250, X>,
<0.0122950819786638021469116210938, K>, <0.0122950819786638021469116210938, L>,
<0.0122950819786638021469116210938, S>, <0.00819672131910920143127441406250, F>,
<0.00409836065955460071563720703125, D>, <0.000000000000000000000000000000, H>,
<0.000000000000000000000000000000, R>, <0.000000000000000000000000000000, Y> ]
> alphabet[Index(alphabet,"M")-4];
I
> /*
> GOTLAMCI..
> */
> SortedFreqDist(Decimation(vt2,9,10));
[ <0.122950819320976734161376953125, H>, <0.118852458894252777099609375000, X>,
<0.0819672131910920143127441406250, M>, <0.0737704914063215255737304687500, K>,
<0.0696721309795975685119628906250, L>, <0.0655737705528736114501953125000, B>,
<0.0655737705528736114501953125000, T>, <0.0532786883413791656494140625000, G>,
<0.0491803279146552085876464843750, W>, <0.0409836065955460071563720703125, A>,
<0.0409836065955460071563720703125, N>, <0.0327868852764368057250976562500, E>,
<0.0327868852764368057250976562500, R>, <0.0327868852764368057250976562500, Y>,
<0.0245901639573276042938232421875, F>, <0.0245901639573276042938232421875, V>,
<0.0204918032977730035781860351562, O>, <0.0163934426382184028625488281250, U>,
<0.0122950819786638021469116210938, P>, <0.00819672131910920143127441406250, I>,
<0.00819672131910920143127441406250, Z>, <0.00409836065955460071563720703125, C>,
<0.000000000000000000000000000000, D>, <0.000000000000000000000000000000, J>,
<0.000000000000000000000000000000, Q>, <0.000000000000000000000000000000, S> ]
> alphabet[Index(alphabet,"H")-4];
D
> /*
> GOTLAMCID.
> */
> SortedFreqDist(Decimation(vt2,10,10));
[ <0.118852458894252777099609375000, C>, <0.0942622954025864601135253906250, R>,
<0.0819672131910920143127441406250, M>, <0.0778688527643680572509765625000, Q>,
<0.0778688527643680572509765625000, Y>, <0.0737704914063215255737304687500, L>,
<0.0655737705528736114501953125000, J>, <0.0532786883413791656494140625000, G>,
<0.0532786883413791656494140625000, P>, <0.0409836065955460071563720703125, F>,
<0.0368852457031607627868652343750, B>, <0.0368852457031607627868652343750, S>,
<0.0327868852764368057250976562500, K>, <0.0286885246168822050094604492188, U>,
<0.0204918032977730035781860351562, N>, <0.0204918032977730035781860351562, T>,
<0.0204918032977730035781860351562, W>, <0.0163934426382184028625488281250, D>,
<0.0163934426382184028625488281250, Z>, <0.00819672131910920143127441406250, A>,
<0.00819672131910920143127441406250, E>, <0.00819672131910920143127441406250, I>,
<0.00409836065955460071563720703125, O>, <0.00409836065955460071563720703125, X>,
<0.000000000000000000000000000000, H>, <0.000000000000000000000000000000, V> ]
> alphabet[Index(alphabet,"C")-4];

>> alphabet[Index(alphabet,"C")-4];
           ^
Runtime error in '[]': Sequence element -1 not defined
> /*
> Of course, we need need to work modulo 26 here. The (-1)-th letter of
> the alphabet means the 25th letter of the alphabet.
> */
> alphabet[Index(alphabet,"C")-4+26];
Y
> /* GOTLAMCIDY */
> V2:=VigenereCryptosystem(10);
> k2:=V2!"GOTLAMCIDY";
> dk2:=InverseKey(k2);
> dk2;
UMHPAOYSXC
> Enciphering(dk2,Encoding(V2,vt2));
IHAZCALLUDUPOJMYFRYENDMNSHERBOCKHKLMESENEDAUINTHUAUTUINOFLQSTYEWRANDVOUNDDIMINTEEPCKNVERI\
ATIOJWITHQVERYOTOUTVLORIZFACETELDENLYGEDTLEMWNWITXFIERUREDHQIRWIPHANAFOLOGUFORMOINTRQSION\
YWASAXOUTTEWITHZRAWWXENHOHMESPKLLEDIEABRKPTLYENTOTXEROOIANDCBOSEDPHEDOERBEHENDMEOOUCOQLDN\
OJPOSSEBLYHQVECOIEATARETTENTIMECYDEANWATSENHESWIDCOHDIALHYIWAIAFRAEDTHAJYOUWAREENWAGEDOOI\
AMLERYMQCHSOJHENIYANWAYTINTDENEXJROOMJOTATQLLTHESGENJLEMAJMRWIBSONHWSBEEDMYPANTNERQNDHEHP\
ERIDMANYKFMYMESTSUYCESSVULCAOESANTIHAVANODOKBTTHWTHEWYLLBEKFTHEKTMOSPUSETEMEINUOURSQLSOTD\
ESTOKTGENPLEMADHALFNOSEFHOMHIOCHAIHANDGWVEABEBOFGNEETIDGWITDAQUISKLITPLEQUUSTIOJINGGBANCE\
BROMHYSSMAHLFATUNCIRYLEDEOESTRUTHESUTTEEOAIDHELMESNELAPIINGIJTOHIIARMCDAIRADDPUTPINGHYSFI\
NCERTIFSTOGATHERQSWASDISCUITOMWDENINZUDICEALMOEDSIKJOWMYTEARWWTSONJHATYKUSHAHEMYLKVEOFQLL\
THWTISBYZARRAANDOKTSIDATHECENVENPIONSQNDHUIDRUMHOUTIJEOFELERYDWYLIFUYOUHWVESHEWNYOQRRELYS\
HFONITBYJHEENPHUSIQSMWHECHHAIPROMLTEDYEUTOCDRONISLEANZIFYOKWILLAXCUSUMYSAUINGSESOMESHATTE\
EMBEHLISHIOMANUOFMYEWNLIPTLEATVENTQRESYEURCAOESHALEINDAEDBEUNOFTDEGREQTESTENTERUSTTOIEIOB\
IERVEZYOUWYLLREIEMBEHTHATEREMAHKEDTDEOTHURDAYFUSTBUFORESEWENJINTOPHEVEHYSIMLLEPREBLEMLRES\
EDTEDBUMISSCARYSQTHERBANDTDATFOHSTRAJGEEFVECTSWNDEXJRAORZINAROCOMBENATIENSWEIUSTGETOLIBEI\
TSULFWHECHISQLWAYOFARMEREDANINGTXANANUEFFOHTOFTDEIMAWINATEONAPHOPOSETIONMHICHETOOKJHELIXE\
RTYEFDOUXTINGOOUDIZDOCTERBUTJONETXELESOYOUMKSTCOIEROUDDTOMUVIEWVOROTDERWIIEISHWLLKEUPONPE\
LINGVACTULONFASTONYKUUNTYLYOUNREASENBREWKSDOMNUNDARTHECANDAYKNOWBEDGEOMETORERIGDTNOWCRJAB\
AZWILIONHENEHASREENGKODENEUGHTKCALLKPONMATHISCORNIJGANDJOBEGENANAHRATIREWHISHPROIISESJOBE\
OJEOFTXEMOSPSINGKLARWDICHIXAVELESTENUDTOFKRSOMUTIMEUOUHALEHEANDMERUMARKPHATTXESTRWNGESJAN\
DMKSTUNYQUETDINGSQREVENYOFTUNCONJECTETNOTWETHTHULARGARBUTMITHTDESMABLERCNIMESQNDOCYASIODA\
LLYENDEETWHERATHERUISROKMFORTOUBTSHETHURANYLOSITYVECREMEHAIBEENYOMMIJTEDAOFARAIIHAVAHEART\
ITISEMPOSIIBLEBORMEJOSAYSHETHURTHELRESEDTCASAISANYNSTAJCEOFSRIMEKRNOTRUTTHACOURIEOFERENTS\
YSCERPAINLOAMONCTHEMESTSIJGULAHTHATEHAVEUVERLESTENUDTOPARHAPIMRWIHSONYEUWOUHDHAVUTHEGNEAT\
KYNDNEOSTORUCOMMANCEYEURNANRATILEIASGYOUNETMERALYBESAUSEIYFRIUNDDRSATSODHASNKTHEAHDTHEKPE\
NIDGPARPBUTABSOBEYAUSEJHEPEYULIAHNATUNEOFTXESTONYMAKUSMEAJXIOUITOHAREEVEHYPOSOIBLETETAIHF\
ROMOOURLEPSASQRULESHENIXAVEHAARDSEMESLEGHTIDDICAPIONOVTHECKURSEEFEVEJTSIACABLEPOGUITEMYSA\
LFBYJHETHKUSANTSOFOPHERSYMILANCASEIWHICDOCCUHTOMYIEMOROINTHAPRESUNTINOTANCUIAMFKRCEDJOADM\
ETTHAJTHEFWCTSAHETOTDEBESJOFMYXELIEVUNIQQE
> /*
> Well, it is not right. But I can see what it should be.
> IHAZCALLUDUPOJMYFRYENDMNSHERBOCKHKLMES clearly should be
> IHADCALLEDUPONMYFRIENDMRSHERLOCKHOLMES. The letters are wrong in the
> 4th place, 9th place, 14th place, 19th place, ... . So I've got the
> 4th and 9th letters of the key wrong.
> */
> SortedFreqDist(Decimation(vt2,4,10));
[ <0.106557376682758331298828125000, P>, <0.0860655736178159713745117187500, L>,
<0.0819672131910920143127441406250, Y>, <0.0778688527643680572509765625000, O>,
<0.0737704914063215255737304687500, V>, <0.0696721309795975685119628906250, A>,
<0.0696721309795975685119628906250, U>, <0.0614754096604883670806884765625, H>,
<0.0532786883413791656494140625000, Z>, <0.0491803279146552085876464843750, T>,
<0.0450819670222699642181396484375, F>, <0.0327868852764368057250976562500, J>,
<0.0327868852764368057250976562500, S>, <0.0286885246168822050094604492188, K>,
<0.0245901639573276042938232421875, B>, <0.0245901639573276042938232421875, D>,
<0.0245901639573276042938232421875, W>, <0.0163934426382184028625488281250, I>,
<0.0122950819786638021469116210938, C>, <0.0122950819786638021469116210938, M>,
<0.00819672131910920143127441406250, N>, <0.00409836065955460071563720703125, Q>,
<0.00409836065955460071563720703125, R>, <0.000000000000000000000000000000, E>,
<0.000000000000000000000000000000, G>, <0.000000000000000000000000000000, X> ]
> /*
> I assumed that P represents E. If so then L represents A, which also looks
> right since L is the second most frequent letter in this decimation. But it
> also means that Y represents U, which looks a bit strange for the 3rd most
> frequent letter, and O represents K, which is very strange for the 4th most
> frequent letter. Maybe it is actually L that represents E. This would mean
> that P represents I, meaning that I is the most frequent letter in this decimation.
> I guess that is possible. And Y would represent R, O would represent H,
> V would represent O, A would represent T, U would represent N, H would represent T.
> This does all seem possible for the 8 most frequent letters.
> */
> alphabet[Index(alphabet,"L")-4];
H
> /*
> try GOTHAMCIDY instead of GOTLAMCIDY. But the 9th letter is also wrong...
> */
> SortedFreqDist(Decimation(vt2,9,10));
[ <0.122950819320976734161376953125, H>, <0.118852458894252777099609375000, X>,
<0.0819672131910920143127441406250, M>, <0.0737704914063215255737304687500, K>,
<0.0696721309795975685119628906250, L>, <0.0655737705528736114501953125000, B>,
<0.0655737705528736114501953125000, T>, <0.0532786883413791656494140625000, G>,
<0.0491803279146552085876464843750, W>, <0.0409836065955460071563720703125, A>,
<0.0409836065955460071563720703125, N>, <0.0327868852764368057250976562500, E>,
<0.0327868852764368057250976562500, R>, <0.0327868852764368057250976562500, Y>,
<0.0245901639573276042938232421875, F>, <0.0245901639573276042938232421875, V>,
<0.0204918032977730035781860351562, O>, <0.0163934426382184028625488281250, U>,
<0.0122950819786638021469116210938, P>, <0.00819672131910920143127441406250, I>,
<0.00819672131910920143127441406250, Z>, <0.00409836065955460071563720703125, C>,
<0.000000000000000000000000000000, D>, <0.000000000000000000000000000000, J>,
<0.000000000000000000000000000000, Q>, <0.000000000000000000000000000000, S> ]
> /*
> Maybe it is X that represents E
> */
> alphabet[Index(alphabet,"X")-4];
T
> /* GOTHAMCITY */
> k2:=V2!"GOTHAMCITY";
> dk2:=InverseKey(k2);
> Enciphering(dk2,Encoding(V2,vt2));
IHADCALLEDUPONMYFRIENDMRSHERLOCKHOLMESONEDAYINTHEAUTUMNOFLASTYEARANDFOUNDHIMINDEEPCONVERS\
ATIONWITHAVERYSTOUTFLORIDFACEDELDERLYGENTLEMANWITHFIERYREDHAIRWITHANAPOLOGYFORMYINTRUSION\
IWASABOUTTOWITHDRAWWHENHOLMESPULLEDMEABRUPTLYINTOTHEROOMANDCLOSEDTHEDOORBEHINDMEYOUCOULDN\
OTPOSSIBLYHAVECOMEATABETTERTIMEMYDEARWATSONHESAIDCORDIALLYIWASAFRAIDTHATYOUWEREENGAGEDSOI\
AMVERYMUCHSOTHENICANWAITINTHENEXTROOMNOTATALLTHISGENTLEMANMRWILSONHASBEENMYPARTNERANDHELP\
ERINMANYOFMYMOSTSUCCESSFULCASESANDIHAVENODOUBTTHATHEWILLBEOFTHEUTMOSTUSETOMEINYOURSALSOTH\
ESTOUTGENTLEMANHALFROSEFROMHISCHAIRANDGAVEABOBOFGREETINGWITHAQUICKLITTLEQUESTIONINGGLANCE\
FROMHISSMALLFATENCIRCLEDEYESTRYTHESETTEESAIDHOLMESRELAPSINGINTOHISARMCHAIRANDPUTTINGHISFI\
NGERTIPSTOGETHERASWASHISCUSTOMWHENINJUDICIALMOODSIKNOWMYDEARWATSONTHATYOUSHAREMYLOVEOFALL\
THATISBIZARREANDOUTSIDETHECONVENTIONSANDHUMDRUMROUTINEOFEVERYDAYLIFEYOUHAVESHOWNYOURRELIS\
HFORITBYTHEENTHUSIASMWHICHHASPROMPTEDYOUTOCHRONICLEANDIFYOUWILLEXCUSEMYSAYINGSOSOMEWHATTO\
EMBELLISHSOMANYOFMYOWNLITTLEADVENTURESYOURCASESHAVEINDEEDBEENOFTHEGREATESTINTERESTTOMEIOB\
SERVEDYOUWILLREMEMBERTHATIREMARKEDTHEOTHERDAYJUSTBEFOREWEWENTINTOTHEVERYSIMPLEPROBLEMPRES\
ENTEDBYMISSMARYSUTHERLANDTHATFORSTRANGEEFFECTSANDEXTRAORDINARYCOMBINATIONSWEMUSTGOTOLIFEI\
TSELFWHICHISALWAYSFARMOREDARINGTHANANYEFFORTOFTHEIMAGINATIONAPROPOSITIONWHICHITOOKTHELIBE\
RTYOFDOUBTINGYOUDIDDOCTORBUTNONETHELESSYOUMUSTCOMEROUNDTOMYVIEWFOROTHERWISEISHALLKEEPONPI\
LINGFACTUPONFACTONYOUUNTILYOURREASONBREAKSDOWNUNDERTHEMANDACKNOWLEDGESMETOBERIGHTNOWMRJAB\
EZWILSONHEREHASBEENGOODENOUGHTOCALLUPONMETHISMORNINGANDTOBEGINANARRATIVEWHICHPROMISESTOBE\
ONEOFTHEMOSTSINGULARWHICHIHAVELISTENEDTOFORSOMETIMEYOUHAVEHEARDMEREMARKTHATTHESTRANGESTAN\
DMOSTUNIQUETHINGSAREVERYOFTENCONNECTEDNOTWITHTHELARGERBUTWITHTHESMALLERCRIMESANDOCCASIONA\
LLYINDEEDWHERETHEREISROOMFORDOUBTWHETHERANYPOSITIVECRIMEHASBEENCOMMITTEDASFARASIHAVEHEARD\
ITISIMPOSSIBLEFORMETOSAYWHETHERTHEPRESENTCASEISANINSTANCEOFCRIMEORNOTBUTTHECOURSEOFEVENTS\
ISCERTAINLYAMONGTHEMOSTSINGULARTHATIHAVEEVERLISTENEDTOPERHAPSMRWILSONYOUWOULDHAVETHEGREAT\
KINDNESSTORECOMMENCEYOURNARRATIVEIASKYOUNOTMERELYBECAUSEMYFRIENDDRWATSONHASNOTHEARDTHEOPE\
NINGPARTBUTALSOBECAUSETHEPECULIARNATUREOFTHESTORYMAKESMEANXIOUSTOHAVEEVERYPOSSIBLEDETAILF\
ROMYOURLIPSASARULEWHENIHAVEHEARDSOMESLIGHTINDICATIONOFTHECOURSEOFEVENTSIAMABLETOGUIDEMYSE\
LFBYTHETHOUSANDSOFOTHERSIMILARCASESWHICHOCCURTOMYMEMORYINTHEPRESENTINSTANCEIAMFORCEDTOADM\
ITTHATTHEFACTSARETOTHEBESTOFMYBELIEFUNIQUE
> /*
> It is right now.
> */
> for i:=2 to 25 do
for> print "Period:",i,"CI:",CoincidenceIndex(Decimation(vt3,1,i));
for> end for;
Period: 2 CI: 0.0402615184500581912781543095776
Period: 3 CI: 0.0406375735066542865985762921696
Period: 4 CI: 0.0406994354949745284317775024095
Period: 5 CI: 0.0375107665805340223944875107666
Period: 6 CI: 0.0378646803227808814400993171943
Period: 7 CI: 0.0618792971734148204736440030557
Period: 8 CI: 0.0392482034273079049198452183527
Period: 9 CI: 0.0411764705882352941176470588236
Period: 10 CI: 0.0372101073035652474904811353410
Period: 11 CI: 0.0382916053019145802650957290133
Period: 12 CI: 0.0369538077403245942571785268414
Period: 13 CI: 0.0431971789597414046429620922715
Period: 14 CI: 0.0663021189336978810663021189337
Period: 15 CI: 0.0356025039123630672926447574335
Period: 16 CI: 0.0429669832654907281772953414745
Period: 17 CI: 0.0327700972862263184843830005120
Period: 18 CI: 0.0350282485875706214689265536723
Period: 19 CI: 0.0454545454545454545454545454546
Period: 20 CI: 0.0412299091544374563242487770790
Period: 21 CI: 0.0627450980392156862745098039216
Period: 22 CI: 0.0459183673469387755102040816327
Period: 23 CI: 0.0453283996299722479185938945421
Period: 24 CI: 0.0393939393939393939393939393940
Period: 25 CI: 0.0387596899224806201550387596899
> /*
> Period 7 is the one
> */
> SortedFreqDist(Decimation(vt3,1,7))[1];
<0.136363636702299118041992187500, X>
> SortedFreqDist(Decimation(vt3,2,7))[1];
<0.168831169605255126953125000000, A>
> SortedFreqDist(Decimation(vt3,3,7))[1];
<0.123376623727381229400634765625, S>
> SortedFreqDist(Decimation(vt3,4,7))[1];
<0.103896103799343109130859375000, T>
> SortedFreqDist(Decimation(vt3,5,7))[1];
<0.149350648745894432067871093750, E>
> SortedFreqDist(Decimation(vt3,6,7))[1];
<0.116883116774260997772216796875, G>
> SortedFreqDist(Decimation(vt3,7,7))[1];
<0.129870129749178886413574218750, I>
> /*
> XASTEGI for the images of E, possibly.
> */
> alphabet[Index(alphabet,"X")-4];
T
> alphabet[Index(alphabet,"A")-4+26];
W
> alphabet[Index(alphabet,"S")-4];
O
> alphabet[Index(alphabet,"T")-4];
P
> alphabet[Index(alphabet,"E")-4];
A
> alphabet[Index(alphabet,"G")-4];
C
> alphabet[Index(alphabet,"I")-4];
E
> V3:=VigenereCryptosystem(7);
> k3:=V3!"TWOPACE";
> Enciphering(InverseKey(k3),Encoding(V3,vt3));
MYDUARFELLEWSAIDSXERLOCKXOLMESAIWESATODEITHERIIDEOFTXEFIREIDHISLODWINGSATRAKERSTHEETLIFUI\
SINFIDITELYSJRANGERJHANANYJHINGWHYCHTHEMYNDOFMADCOULDIDVENTWEMOULDNOJDARETOSONCEIVUTHETHI\
DGSWHICXAREREABLYMERESOMMONPBACESOFUXISTENSEIFWECEULDFLYEUTOFTHQTWINDOMHANDINXANDHOVUROVE\
RTXISGREAJCITYGEDTLYREMEVETHEREOFSANDFEEPINAJTHEQUEURTHINGIWHICHAHEGOINGENTHESTHANGECOYNC\
IDENSESTHEPBANNINGITHECROISPURPOIESTHEWENDERFUBCHAINSEFEVENTIWORKINWTHROUGXGENERAJIONANDB\
EADINGJOTHEMOITOUTREHESULTSYTWOULDCAKEALLVICTIONMITHITSSONVENTYONALITYESANDFERESEENSONCLU\
SYONSMOSJSTALEADDUNPROVITABLEQNDYETIQMNOTCODVINCEDEFITIANIWEREDTXECASESMHICHCOCETOLIGXTIN\
THEFAPERSAHEASARUBEBALDEDOUGHANTVULGARUNOUGHWUHAVEINEURPOLISEREPORJSREALIIMPUSHETTOITSENT\
REMELYMITSANTYETTHEHESULTIIITMUSTRECONFEISEDNEIJHERFASSINATINWNORARTYSTICACURTAINSULECTIO\
DANDDISSRETIONCUSTBEUIEDINPREDUCINGQREALISJICEFFESTREMARAEDHOLMUSTHISIIWANTINWINTHEPELICE\
REFORTWHEHEMORESJRESSISBAIDPERXAPSUPODTHEPLAJITUDESEFTHEMAWISTRATUTHANUPENTHEDEJAILSWHYCH\
TOANEBSERVEHCONTAIDTHEVITQLESSENSEOFTHEMHOLEMAJTERDEPUNDUPONYTTHEREYSNOTHIDGSOUNNQTURALAI\
THECOMCONPLACU
> /*
> Wrong again! The 4th letter of the key is wrong.
> */
> SortedFreqDist(Decimation(vt3,4,7))[2];
<0.103896103799343109130859375000, Y>
> alphabet[Index(alphabet,"Y")-4];
U
> k3:=V3!"TWOUACE";
> Enciphering(InverseKey(k3),Encoding(V3,vt3));
MYDPARFELLZWSAIDSSERLOCKSOLMESADWESATOYEITHERDIDEOFTSEFIREIYHISLODRINGSATMAKERSTCEETLIFPI\
SINFIYITELYSERANGEREHANANYEHINGWHTCHTHEMTNDOFMAYCOULDIYVENTWEHOULDNOEDARETONONCEIVPTHETHI\
YGSWHICSAREREAWLYMERENOMMONPWACESOFPXISTENNEIFWECZULDFLYZUTOFTHLTWINDOHHANDINSANDHOVPROVE\
RTSISGREAECITYGEYTLYREMZVETHERZOFSANDAEEPINAETHEQUEPRTHINGDWHICHACEGOINGZNTHESTCANGECOTNC\
IDENNESTHEPWANNINGDTHECRODSPURPODESTHEWZNDERFUWCHAINSZFEVENTDWORKINRTHROUGSGENERAEIONANDW\
EADINGEOTHEMODTOUTRECESULTSTTWOULDXAKEALLQICTIONHITHITSNONVENTTONALITTESANDFZRESEENNONCLU\
STONSMOSESTALEAYDUNPROQITABLELNDYETILMNOTCOYVINCEDZFITIANDWEREDTSECASESHHICHCOXETOLIGSTIN\
THEAAPERSACEASARUWEBALDEYOUGHANOVULGARPNOUGHWPHAVEINZURPOLINEREPORESREALIDMPUSHEOTOITSEIT\
REMELTMITSANOYETTHECESULTIDITMUSTMECONFEDSEDNEIEHERFASNINATINRNORARTTSTICACPRTAINSPLECTIO\
YANDDISNRETIONXUSTBEUDEDINPRZDUCINGLREALISEICEFFENTREMARVEDHOLMPSTHISIDWANTINRINTHEPZLICE\
REAORTWHECEMORESERESSISWAIDPERSAPSUPOYTHEPLAEITUDESZFTHEMARISTRATPTHANUPZNTHEDEEAILSWHTCH\
TOANZBSERVECCONTAIYTHEVITLLESSENNEOFTHEHHOLEMAETERDEPPNDUPONTTTHERETSNOTHIYGSOUNNLTURALAD\
THECOMXONPLACP
> /*
> Still wrong!
> */
> SortedFreqDist(Decimation(vt3,4,7))[3];
<0.0974025977775454521179199218750, X>
> alphabet[Index(alphabet,"X")-4];
T
> /*
> I can see that this will not be right either. The plain text is clearly
> MYDEARFELLOWSAIDSHERLOCK... . The 4th letter of vt3 is a J, and it must represent E,
> meaning that A is represented by F. The key is TWOFACE, and in this particular
> decimation of the plaintext E is only the 5th most frequent letter!
> In this case the ciphertext was quite short, making the decimations of 
> period 7 very short. The letter frequencies in short pieces of text
> can easily be different from the typical frequencies for long
> pieces of text
*/
> SortedFreqDist(Decimation(vt3,4,7))[5];
<0.0844155848026275634765625000000, J>
> k3:=V3!"TWOFACE";
> Enciphering(InverseKey(k3),Encoding(V3,vt3));
MYDEARFELLOWSAIDSHERLOCKHOLMESASWESATONEITHERSIDEOFTHEFIREINHISLODGINGSATBAKERSTREETLIFEI\
SINFINITELYSTRANGERTHANANYTHINGWHICHTHEMINDOFMANCOULDINVENTWEWOULDNOTDARETOCONCEIVETHETHI\
NGSWHICHAREREALLYMERECOMMONPLACESOFEXISTENCEIFWECOULDFLYOUTOFTHATWINDOWHANDINHANDHOVEROVE\
RTHISGREATCITYGENTLYREMOVETHEROOFSANDPEEPINATTHEQUEERTHINGSWHICHAREGOINGONTHESTRANGECOINC\
IDENCESTHEPLANNINGSTHECROSSPURPOSESTHEWONDERFULCHAINSOFEVENTSWORKINGTHROUGHGENERATIONANDL\
EADINGTOTHEMOSTOUTRERESULTSITWOULDMAKEALLFICTIONWITHITSCONVENTIONALITIESANDFORESEENCONCLU\
SIONSMOSTSTALEANDUNPROFITABLEANDYETIAMNOTCONVINCEDOFITIANSWEREDTHECASESWHICHCOMETOLIGHTIN\
THEPAPERSAREASARULEBALDENOUGHANDVULGARENOUGHWEHAVEINOURPOLICEREPORTSREALISMPUSHEDTOITSEXT\
REMELIMITSANDYETTHERESULTISITMUSTBECONFESSEDNEITHERFASCINATINGNORARTISTICACERTAINSELECTIO\
NANDDISCRETIONMUSTBEUSEDINPRODUCINGAREALISTICEFFECTREMARKEDHOLMESTHISISWANTINGINTHEPOLICE\
REPORTWHEREMORESTRESSISLAIDPERHAPSUPONTHEPLATITUDESOFTHEMAGISTRATETHANUPONTHEDETAILSWHICH\
TOANOBSERVERCONTAINTHEVITALESSENCEOFTHEWHOLEMATTERDEPENDUPONITTHEREISNOTHINGSOUNNATURALAS\
THECOMMONPLACE
> exit;

Total time: 0.750 seconds, Total memory usage: 1.34MB
