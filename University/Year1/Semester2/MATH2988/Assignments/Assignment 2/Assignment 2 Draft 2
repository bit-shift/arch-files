Last login: Sun Oct 15 14:15:45 on ttys001
MacBook-Pro-2:~ keegangyoery$ /Applications/Magma/magma ; exit;
Magma V2.19-8 (STUDENT)   Sun Oct 15 2017 14:54:21    [Seed = 1291308930]
Type ? for help.  Type <Ctrl>-D to quit.
> load "MagmaProcedures.txt";                                                                                                                                                             

>> load "MagmaProcedures.txt";
   ^
User error: Could not open file "MagmaProcedures.txt" (No such file or directory)
> ChangeDirectory("MAGMA1");

>> ChangeDirectory("MAGMA1");
                  ^
Runtime error in 'ChangeDirectory': Cannot change directory to "MAGMA1" (No such file or directory)

> ChangeDirectory("desktop");
> ChangeDirectory("MAGMA1"); 
> load "MagmaProcedures.txt";
Loading "MagmaProcedures.txt"
(Magma functions defined for use in MATH2068/2988)
> SID:=470413467;
> p:=NextPrime(SID);
> 
> while p mod 4 ne 1 do
while> p:=NextPrime(p);
while> end while;
> 
> p;
470413577
>       
> n:=-1;
> n;
-1
> 
> while IsSquare(n) ne true do
while> n:=n+p;
while> end while;
> n;
39411268768016656
> sqrt(n);

>> sqrt(n);
   ^
User error: Identifier 'sqrt' has not been declared or assigned
> Sqrt(n);
198522716.000000000000000000000
> n:=198522716;
> n:=39411268768016656;
> n mod p;
470413576
> 
> load "asst2definitions.txt";
Loading "asst2definitions.txt"
> 
> 
> z,r:=IsSquare(n);
> z;
false
> r;

>> r;
   ^
User error: Identifier 'r' has not been declared or assigned
> n;           
938106587265383273393167760915762261996094761223427568346538532610031966139296728732635832638031460153282613288101729262351829488219755336468536013520565661042592164167712117904352219170\
588225264094371152397540009551746581847620253960735585195835425144415937720236290344873770316286565163941978335931442541943539644331326495691556908041397406675115377573876527086019274016\
711659847314575538467408588271463402645010260636976106130061459254185801970726918016440044315520630420506820510775717586351729607830869092278713879307749511028853827841472540415748539534\
357310650668399156866389057909003883053159738835769152777153234003515166909973282314900999390239310942878555501422211642735535687417323817000401862301195499491064179771326392412283599447\
526107033527469643182871807512863542291290082195138398497756482420280033745637925436612799282672759206118299253165601490166705772483160662570122142083877666967545572908920160640568218678\
162742121781954051569572049947856290444284668473850948164919360315817613163229126960475363131733492133868426704095361041023789788804675973961784660852633663979266037666407204866550597798\
39601794303709474049591540872506462954297086610729785360680541419184954536528332529930703440849067503464801342511657463236784285241691
> 
> 
> D:=1 + 8n;

>> D:=1 + 8n;
           ^
User error: bad syntax
> D:=1 + 8*n;
> z,r := IsSquare(D);
> z;
true
> r;
273949862166840050906135916007322093616696995615235444594367371584146321139767731255409657740478059946113368248838752105111380106764524719600490947387873263501335996096092358488727663721\
059677808040021164282634149181203032780813518819579375364639481671651731239530048564564099358273750604349723512357592149558494168188032733169247161342228507167260683544915901398061343038\
423621559108819907820992466956448190956513213526418631330968097000437778307719326690443394121111810088094363736329810522377520988037643558753537261932278414818493639126969543571990442997\
82298531875580834361704396344161338572410797287643949352725152789477
> x:=(-1+r)/2;
> x;
136974931083420025453067958003661046808348497807617722297183685792073160569883865627704828870239029973056684124419376052555690053382262359800245473693936631750667998048046179244363831860\
529838904020010582141317074590601516390406759409789687682319740835825865619765024282282049679136875302174861756178796074779247084094016366584623580671114253583630341772457950699030671519\
211810779554409953910496233478224095478256606763209315665484048500218889153859663345221697060555905044047181868164905261188760494018821779376768630966139207409246819563484771785995221498\
91149265937790417180852198172080669286205398643821974676362576394738
> xx:=2*x+1;
> xx;
273949862166840050906135916007322093616696995615235444594367371584146321139767731255409657740478059946113368248838752105111380106764524719600490947387873263501335996096092358488727663721\
059677808040021164282634149181203032780813518819579375364639481671651731239530048564564099358273750604349723512357592149558494168188032733169247161342228507167260683544915901398061343038\
423621559108819907820992466956448190956513213526418631330968097000437778307719326690443394121111810088094363736329810522377520988037643558753537261932278414818493639126969543571990442997\
82298531875580834361704396344161338572410797287643949352725152789477
> EPhi:=(x-1)*(xx-1);
> e;
199414181
> InverseMod(e,EPhi);

>> InverseMod(e,EPhi);
             ^
Runtime error in 'InverseMod': Bad argument types
Argument types given: FldRatElt, FldRatElt

> Modinv(e,EPhi);    

>> Modinv(e,EPhi);
         ^
Runtime error in 'Modinv': Bad argument types
Argument types given: FldRatElt, FldRatElt

> InverseMod(e,(x-1)*(xx-1));

>> InverseMod(e,(x-1)*(xx-1));
             ^
Runtime error in 'InverseMod': Bad argument types
Argument types given: FldRatElt, FldRatElt

> 
> 
> a:=Random(10^100,10^101);
> p:=NextPrime(a);
> a:=Random(10^100,10^101);
> q:=NextPrime(a);
> p;
38132117891573258264474092462514217434071285557988952113269793583818867530347297032531617229299001229
> q;
42784079597845999598453981313724792383903109850942922408536406967449038331857244933948522290709227831
> n:=p*q;
> n;
163144756710751785356836850231536636540067469763601968495587019006524743663784610418663228586110051591701898683946319618128233852783989372660030348766293563049733007898081096735430172390\
1854702110004299
> e:=65537;
> e;          
65537
> InverseMod(e,(p-1)*(q-1));
255059153952479178596235770247695863098636082701049143110881577847758140222948428879811929153498571574175033640242156217249153861862805079997269545061239484865790517432083032597836923791\
795379034969393
> load "asst2definitions.txt";
Loading "asst2definitions.txt"
> e;
199414181
> IntegerRing(e);
Residue class ring of integers modulo 199414181
Mapping from: Integer Ring to IntegerRing(199414181)
modulo 199414181 
> IntegerRing(x);

>> IntegerRing(x);
              ^
Runtime error in 'IntegerRing': Bad argument types
Argument types given: FldRatElt

> Integers(x);

>> Integers(x);
           ^
Runtime error in 'Integers': Bad argument types
Argument types given: FldRatElt

> E;

>> E;
   ^
User error: Identifier 'E' has not been declared or assigned
> e
> ;
199414181
> 
> 
> 
> 
> 
> 
> 
> clear
> 
> 
> 
> e;

>> e;
   ^
User error: bad syntax
> e;
199414181
> 
> 
> 
> 
> n;
938106587265383273393167760915762261996094761223427568346538532610031966139296728732635832638031460153282613288101729262351829488219755336468536013520565661042592164167712117904352219170\
588225264094371152397540009551746581847620253960735585195835425144415937720236290344873770316286565163941978335931442541943539644331326495691556908041397406675115377573876527086019274016\
711659847314575538467408588271463402645010260636976106130061459254185801970726918016440044315520630420506820510775717586351729607830869092278713879307749511028853827841472540415748539534\
357310650668399156866389057909003883053159738835769152777153234003515166909973282314900999390239310942878555501422211642735535687417323817000401862301195499491064179771326392412283599447\
526107033527469643182871807512863542291290082195138398497756482420280033745637925436612799282672759206118299253165601490166705772483160662570122142083877666967545572908920160640568218678\
162742121781954051569572049947856290444284668473850948164919360315817613163229126960475363131733492133868426704095361041023789788804675973961784660852633663979266037666407204866550597798\
39601794303709474049591540872506462954297086610729785360680541419184954536528332529930703440849067503464801342511657463236784285241691
> 
> xx;
273949862166840050906135916007322093616696995615235444594367371584146321139767731255409657740478059946113368248838752105111380106764524719600490947387873263501335996096092358488727663721\
059677808040021164282634149181203032780813518819579375364639481671651731239530048564564099358273750604349723512357592149558494168188032733169247161342228507167260683544915901398061343038\
423621559108819907820992466956448190956513213526418631330968097000437778307719326690443394121111810088094363736329810522377520988037643558753537261932278414818493639126969543571990442997\
82298531875580834361704396344161338572410797287643949352725152789477
> x;
136974931083420025453067958003661046808348497807617722297183685792073160569883865627704828870239029973056684124419376052555690053382262359800245473693936631750667998048046179244363831860\
529838904020010582141317074590601516390406759409789687682319740835825865619765024282282049679136875302174861756178796074779247084094016366584623580671114253583630341772457950699030671519\
211810779554409953910496233478224095478256606763209315665484048500218889153859663345221697060555905044047181868164905261188760494018821779376768630966139207409246819563484771785995221498\
91149265937790417180852198172080669286205398643821974676362576394738
> EPhi;
375242634906153309357267104366304904798437904489371027338615413044012786455718691493054333055212584061313045315240691704940731795287902134587414405408226264417036865667084847161740887668\
235290105637748460959016003820698632739048101584294234078334170057766375088094516137949508126514626065576791334372577016777415857732530598276622763216558962670046151029550610834407709606\
684663938925830215386963435308585361058004104254790442452024583701674320788290767206576017726208252168202728204310287034540691843132347636911485551723099804411541531136589016166299415813\
742924260267359662746555623163601553221263895534307661110861293601351276791555944915779172572894259958428082801445837568175340800650100262572207198669396268248330059919307883315145689357\
988166792058082913353050533527570764216248833658836887701357060223900077936647165941788592883232863075891156997502324720993754412658933918780142847120638246915363479042698119553755769041\
353398015075175073993979387710696814744261730680557198986355475518642320953469886802625946759302107215356068038932860690143322296121782833923169999002964786767484053048944009199354277014\
882902979607309184447658711103570168853489618617525232728324077077175221082362168450999404970707947336714383775471341954241686835387812
> 
> 
> 
> EPhi:= Floor(EPhi);
> EPhi;
375242634906153309357267104366304904798437904489371027338615413044012786455718691493054333055212584061313045315240691704940731795287902134587414405408226264417036865667084847161740887668\
235290105637748460959016003820698632739048101584294234078334170057766375088094516137949508126514626065576791334372577016777415857732530598276622763216558962670046151029550610834407709606\
684663938925830215386963435308585361058004104254790442452024583701674320788290767206576017726208252168202728204310287034540691843132347636911485551723099804411541531136589016166299415813\
742924260267359662746555623163601553221263895534307661110861293601351276791555944915779172572894259958428082801445837568175340800650100262572207198669396268248330059919307883315145689357\
988166792058082913353050533527570764216248833658836887701357060223900077936647165941788592883232863075891156997502324720993754412658933918780142847120638246915363479042698119553755769041\
353398015075175073993979387710696814744261730680557198986355475518642320953469886802625946759302107215356068038932860690143322296121782833923169999002964786767484053048944009199354277014\
882902979607309184447658711103570168853489618617525232728324077077175221082362168450999404970707947336714383775471341954241686835387812
> InverseMod(e,EPhi);
106424366616420424848338219085651157216211017885208084424943614882952606952249806502457597067771774201028594348902594675489381816682254696199681823368387461404007032191338005310389672337\
531888019240690265078215925632242482904847444216397199545406487845523193414773220985893719727499099849224756940505257472328686534416673179306338670906283074079685153059371451624836959977\
240924982392980062371895351993791729728992449817672654196728658449034906145414474303708718746546230045405539204575079352551810164410290172312983211622701673064765307888345581509874611818\
537204288415319122751153166584065075169584468943305837453064662246919211378264750124245017099757223896411182569698847878915417098892173569299203872088746247367507474352915507876485464872\
337821167589910130448980433128372066897369957169494266378500628311232865943713689789177391927902683890222651971539263016670041452460347196084011928409606801695202840296552307911098499214\
049287897968379052627725253654792813164494396060119550471850821716582970990883035758109752397397214431740694930062524292293673499798956590186460289521690861562940986811039578096515456768\
017955431152092330812210022613007410820975693855404956018260994983979913766333578060428117000560781712130847777139532765909178712798149
> 
> 
> 
> pt:=[Modexp(m,d,n): m in ct];

>> pt:=[Modexp(m,d,n): m in ct];
                 ^
User error: Identifier 'd' has not been declared or assigned
> d:=InverseMod(e,EPhi);       
> pt:=[Modexp(m,d,n): m in ct];
> NaiveDecoding(pt);
ERROR! 262 is not a valid ascii code number.

      This means that you have not obtained the correct encoded form of the text.

> 
> 
> 
> 
> exit;

Total time: 24.620 seconds, Total memory usage: 32.09MB
logout
Saving session...
...copying shared history...
...saving history...truncating history files...
...completed.

[Process completed]

