Download the iso from the Arch Linux Wiki
	- Note the path to the iso on the desktop

Make the USB Drive Bootable from terminal
	- lsblk or lsblk -f to determine the sdX for the USB
	- dd id=/path/to/iso/file of=/dev/sdX (status="progress")
	- Computer should no longer be able to read the USB

BIOS Boot Type not UEFI Boot Type
	- ls /sys/firmware/efi/efivars
	- If it doesnt exist, its BIOS

Establish wifi connection
	- wifi-menu [Password not hidden]
	- wifi-mnu -o [Password hidden]
	- Use the GUI to select the wifi network
	- Put in the password and hit OK
	- ping -c 5 www.google.com
	- Check connection is working 
	- This creates a profile for the interface and the wifi network
	- Located in /etc/netctl/
	- This uses the netctl package as the Network Manager
	- Creates issues with systemd later as the service is running
	- Avoid by using Ethernet connection instead
	- Alternatively, enable NetworkManager and then connect to the network through NetworkManager after reboot
	- Stop the interface service through netctl and the issue should be sorted
	- Again, avoid by using Ethernet on install and not establishing a wifi connection
	- Remove the netctl profile from /etc/netctl/

Ensure the system clock is correct
	- timedatectl set-ntp true (TRUE)

Partition the hard drive - 4 partitions
	- Either use cfdisk or fdisk /dev/sda
	- Delete all previous partitions
	- 1. Boot partition - 200M - Linux 83
	- 2. Swap partition - 150% of RAM (12G) - Linux 83
	- 3. Root partition - 25G+ - Linux 83
	- 4. Home partition - Remainder - Linux 83
	- All primary, no bootbale flag anywhere
	- Write to disk

Make the filesystems for the partitions
	- ext4 used for 1,3,4
	- mkfs.ext4 /dev/sdaX
	- If a mistake is made use the wipefs
	- wipefs -a /dev/sdaX
	- Use the -f option to force a wipe
	- Should be able to use wipefs -a /dev/sda* to wipe all

Establish the swap partition
	- mkswap /dev/sda2
	- swapon /dev/sda2
	- Turn the swap off if needed through swapoff

Mount the filesystems in the appropriate places
	- Create the folders in the /mnt directory
	- mkdir /mnt/home
	- mkdir /mnt/boot
	- mount /dev/sda1 /mnt/boot
	- mount /dev/sda3 /mnt
	- mount /dev/sda4 /mnt/home
	- Use umount to unmount any file systems

Run pacstrap to set up all of the base install packages
	- pacstrap /mnt base base-devel gvim 
	- Builds the arch system with base-devel package group and vim and dialog packages
	- vim for obvious reasons
	- dialog used for GUI wifi list if necessary - if using netctl
	- If using NetworkManager, will not be necessary to have dialog
	- base-devel has sudo and some other packages
	- Need to check what exactly it has put on and remove any unnecessary packages

Create the fstab file
	- Dictates the partition scheme on the hard drive for boot 
	- genfstab -U /mnt >> /mnt/etc/fstab
	- fstab file located at /etc/fstab upon chrooting
	- -U option uses the UUID numbers to identify partitions, not disk names that have the possibility of changing

Change root into mounted filesystems
	- arch-chroot /mnt
	- /mnt now becomes root for the new arch linux system

Install a Network Manager
	- pacman -S networkmanager
	- Enable the unit to ensure it works when the system is rebooted
	- The unit then runs whenever the host is up
	- systemctl enable NetworkManager
	- Creates a bunch of symbolic links to run NetworkManager on login

Install and set-up Grub bootloader
	- pacman -S grub
	- grub-install --target=i386-pc /dev/sda
	- grub-mkconfig -o /boot/grub/grub.cfg
	- -o is output - places in the file grub.cfg

Set a password for the root
	- passwd
	- Enter the password twice to confirm
	- login is root

Generate locale
	- vim /etc/locale.gen
	- Uncomment the en_AU lines
	- Save and exit
	- locale-gen
	- vim /etc/locale.conf
	- New file - and se the LANG variable
	- LANG=en_AU.UTF-8
	- Save and exit

Setting the timezone
	- ln -sf /usr/share/zoneinfo/Australia/Sydney /etc/localtime
	- Symbolic link between the localtime file and the timezone ou are in
	- timedatectl status
	- Use after a hostname for the host is chosen
	- Use this command if you change timezones

Setting the host name
	- vim /etc/hostname 
	- New file - enter one word hostname
	- Save and exit

Exit the arch system
	- exit

Unmount the drives mounted from inside the USB
	- umount -R /mnt
	- lsblk to check everything is unmounted

Reboot
	- reboot
	
